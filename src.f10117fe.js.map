{"version":3,"sources":["node_modules/symbol-observable/es/ponyfill.js","node_modules/symbol-observable/es/index.js","effector/sample.js","effector/split.js","effector/naming.js","effector/createNode.js","effector/region.js","effector/createUnit.js","effector/combine.js","effector/createEffect.js","effector/defer.js","effector/attach.js","effector/createApi.js","effector/createDomain.js","effector/fromObservable.js","effector/guard.js","effector/merge.js","effector/restore.js","effector/kind.js","effector/validate.js","effector/throw.js","effector/is.js","effector/getter.js","effector/id.js","effector/bind.js","effector/step.js","effector/kernel.js","effector/stateRef.js","effector/caller.js","effector/own.js","effector/config.js","effector/clearNode.js","effector/subscription.js","effector/forward.js","effector/watch.js","effector/forIn.js","effector/blocks.js","node_modules/process/browser.js","forest/mountChild.ts","forest/text.ts","forest/platform/mark.ts","forest/platform/now.ts","forest/plan.ts","forest/platform/env.ts","forest/bindings.ts","forest/template.ts","forest/search.ts","forest/remap.ts","forest/elementHook.ts","forest/platform/raf.ts","../src/Middleware.js","../src/Enum.js","../src/Utility.js","../src/Tokenizer.js","../src/Parser.js","../src/Prefixer.js","../src/Serializer.js","webpack:///webpack/bootstrap","webpack:///external \"forest\"","webpack:///external \"stylis\"","webpack:///external \"effector\"","webpack:///src/elements.ts","webpack:///src/index.ts","src/types.ts","src/parts.ts","src/utils.ts","src/logic.ts","src/index.ts"],"names":["symbolObservablePonyfill","root","result","Symbol","observable","self","window","global","module","Function","shape","unitObjectName","objOrArr","method","name","comma","i","key","unit","is","compositeName","fullName","toString","setStoreName","store","rawName","createName","getParent","shortName","currentComposite","path","parent","composite","length","concat","createNode","node","from","source","to","target","child","scope","meta","family","familyRaw","type","sources","arrifyNodes","links","owners","seq","reg","item","push","addToReg","next","getOwners","getLinks","withRegion","cb","regionStack","value","template","getGraph","createEvent","nameOrConfig","maybeConfig","event","payload","args","create","graphite","initUnit","launch","watch","bind","watchUnit","map","fn","config","isObject","mapped","mapName","createComputation","filter","isFunction","console","error","filterMapEvent","createEventFiltration","step","callStack","filterMap","prepend","contramapped","readTemplate","upward","applyParentEventHook","addObservableApi","nativeTemplate","addToRegion","defined","createStore","defaultState","props","onEvent","off","getSubscribers","set","createSubscription","updateStore","plainState","createStateRef","oldState","updates","createNamedEvent","after","plain","subscribers","Map","stateRef","getState","currentPage","getCurrentPage","readRef","id","setState","state","params","defer","reset","units","on","events","Array","isArray","currentSubscription","get","delete","firstState","lastResult","storeState","innerStore","strict","linkNode","getStoreState","before","includes","loader","unshift","$$observable","changed","isStrict","throwError","subscribe","eventOrFn","of","own","combine","handler","stores","onConfigNesting","injectedData","userConfig","structStoreShape","shapeReady","rawHandler","slice","obj","spreadArgs","storeCombination","createEffect","instance","defaultConfig","getType","Promise","resolve","onCopy","kind","use","anyway","finally","done","named","status","fail","doneData","failData","effectRunner","getHandler","getCurrent","page","req","onResolve","onSettled","ok","onReject","err","then","op","fx","runner","stack","rs","data","rj","upd","catch","inFlight","x","pending","amount","attach","injected","runnerSteps","effect","mapParams","attached","runnerFn","a","states","readStateRef","_","splice","createApi","setters","forIn","createDomain","domains","Set","effects","history","domain","hooks","onCreateEvent","createHook","onCreateEffect","onCreateStore","onCreateDomain","forward","fromObservable","assertObject","observableItem","disposer","bind2","clearNode","complete","sample","metadata","sid","clock","greedy","undefined","shapeToStore","isUpward","targetTemplate","createLinkNode","priority","callARegStack","hasSource","sourceState","clockState","callStackAReg","guard","merge","restore","v","split","cases","current","__","message","Error","graph","getConfig","opts","getNestedConfig","ɔ","getValue","joinName","tag","idCount","nextUnitID","nextStepID","arg","cmd","hasRef","nextBarrierID","barrier","barrierID","mov","check","compute","run","update","ownerUnit","owner","link","list","heap","b","ret","isSameType","r","l","queue","ix","first","last","size","deleteMin","pushFirstHeapItem","pushHeap","idx","getPriority","bucket","t","barriers","alreadyStarted","upsert","stop","skip","lastStartedState","mem","local","stepn","fullID","has","add","tryRun","rawConfig","removeItem","pos","indexOf","removeFromNode","currentNode","targetNode","clearNodeNormalized","deep","isDomainUnit","pop","clearMap","clear","ownerSet","unsubscribe","normalizeConfig","part","loc","rawConfigA","rawConfigB","thru","observer","stateFirst","storeRef","ref","closure","clone","Object","assign","stateNew","rawShape","isFresh","childRef","field","defaultShape","sidechain","trigger","acc","hook","forEach","n","cachedSetTimeout","cachedClearTimeout","process","exports","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","Item","array","noop","nextTick","arguments","prototype","apply","title","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","onMount","words","beginMark","endMark","now","removeOpGroupFromQueue","group","cursor","prev","removeOpFromQueue","getOpQueue","activeChilds","forceSetOpValue","active","pushOpToQueue","rafID","raf","execQueue","start","interrupted","quant","tree","hasPropsTasks","runOp","hasTreeTasks","hasDataTasks","onDrain","createOp","createOpQueue","onComplete","[object Object]","createOpGroup","ops","createAsyncValue","onTerminate","onInit","onChange","change","init","terminate","stopAsyncValue","updateAsyncValue","isFalse","val","applyStyleVar","element","style","removeProperty","setProperty","applyStyle","applyDataAttr","dataset","applyAttr","checked","setAttribute","removeAttribute","applyText","textNode","text","replaceData","textContent","String","createTemplate","values","draft","isSvgRoot","namespace","parentActor","currentActor","currentTemplate","templateID","nameMap","pages","childTemplates","currentStackPage","stackTemplates","stackPages","childSpawns","targetPageIndex","findIndex","stackPage","startsWith","actor","api","mount","unmount","deferredInit","prevActor","prevTemplate","spawn","hydration","parentLeaf","mountNode","svgRoot","leafData","opGroup","domSubtree","execRef","runWatchersFrom","parentSpawn","spawnID","leaf","previousSpawn","currentLeaf","closureRef","findClosure","findParentDOMElement","block","findParentDOMElementBlock","findLastVisibleChildBlock","visible","findLastVisibleFragmentChild","lastChild","visibleChild","left","fragment","childs","findPreviousVisibleSiblingBlock","parentFragment","index","sibling","findPreviousVisibleSibling","mountChildTemplates","parentBlockFragment","mountChild","parentDomSubtree","routeBlock","inParentIndex","initialized","elementBlock","stencil","cloneNode","appendChild","needToCallNode","fns","childSpawn","remove","listBlock","treeBlock","recBlock","recItemBlock","warn","visibleSibling","remap","projectedKey","h","readElement","installTextNode","childIndex","textBlock","siblingBlock","document","createTextNode","nextSibling","parentElement","firstChild","hasCb","hasOpts","parentNS","ns","createElementNS","createElement","attr","styleProp","styleVar","childCount","opsAmount","elementTemplate","valueElementMutualSample","mutualSample","domElementCreated","onState","spec","merged","href","propName","templ","for","options","domConfig","parentBlock","foundElement","nodeName","emptyText","onMountSync","immediate","opID","nativePageFound","addEventListener","prevent","preventDefault","stopPropagation","halt","visibleOp","setInParentIndex","getDefaultEnv","using","hydrate","onRoot","namespaceURI","tagName","toLowerCase","usingTemplate","usingBlock","rootLeaf","itemVisible","firstIndex","handlerDef","passive","capture","variant","keyReader","defaultCase","caseName","route","nonDefaultCases","keys","visibleFn","routeTemplate","childDraft","routeItemTemplate","itemUpdater","onValueUpdate","iterateChildLeafs","log","onVisibleChange","rec","recDraft","recTemplate","childField","treeRec","childList","maybeFn","fields","getID","listItemTemplate","spawnState","listItemBlock","leftBlock","rightBlock","right","mountAndVisible","onVisibleChanges","childInitialized","mappedUpdates","mountData","parentNodeUpdateSpawn","updateTriggers","records","input","skipNode","fill","resultRecords","record","asyncValue","wasActive","leftSibling","performance","mark","label","measure","clearMarks","clearMeasures","hrtime","hr","Date","requestAnimationFrame","MS","MOZ","WEBKIT","COMMENT","RULESET","DECLARATION","PAGE","MEDIA","IMPORT","CHARSET","VIEWPORT","SUPPORTS","DOCUMENT","NAMESPACE","KEYFRAMES","FONT_FACE","COUNTER_STYLE","FONT_FEATURE_VALUES","abs","Math","fromCharCode","hash","charat","trim","match","pattern","exec","replace","replacement","indexof","search","charCodeAt","substr","begin","end","strlen","sizeof","append","callback","join","line","column","position","character","characters","children","return","copy","char","peek","caret","token","alloc","dealloc","delimit","delimiter","tokenize","tokenizer","whitespace","identifier","commenter","compile","parse","rule","rules","rulesets","pseudo","points","declarations","scanning","offset","atrule","property","previous","variable","ampersand","reference","comment","declaration","ruleset","post","j","k","y","z","prefix","serialize","output","stringify","middleware","collection","rulesheet","prefixer","installedModules","__webpack_require__","moduleId","modules","m","c","d","getter","o","defineProperty","enumerable","toStringTag","mode","__esModule","object","hasOwnProperty","p","s","require","addStyle","$styles","StyledRoot","styles","styledId","fabric","content","interpolations","strings","interps","STYLED_ID","TypeError","Component","classList","styled"],"mappings":"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,MAKMmtB,EALU,MACd,IAAInqB,EAAK,OACT,MAAO,OAASA,GAAIxG,SAAS,KAFf,GA+DV4wB,EAAuCzgB,GAAgB,CAC3D0gB,KACGC,KAEH,MAAMtqB,EAAKmqB,IAELD,EAxDR,SACEK,EACAC,GAEA,MAAMpyB,EAAS,CAACmyB,EAAQ,IAcxB,OAbAC,EAAQpb,QAAQ,CAACvB,EAAM8L,KACrB,GAAoB,mBAAT9L,EAAqB,CAC9B,GAA8B,iBAAnBA,EAAK4c,UAGd,MAAM,IAAIC,UAAU,2CAFpBtyB,EAAOoD,KAAK,OAAOqS,EAAK4c,gBAK1BryB,EAAOoD,KAAKya,OAAOpI,IAErBzV,EAAOoD,KAAK+uB,EAAQ5Q,EAAQ,MAGvBvhB,EAAOktB,KAAK,IAlBrB,CAwDsB+E,EAASC,GAEvBK,EAAaztB,IACjB6sB,EAAS,CAAE/pB,GAAAA,EAAIkqB,OAAAA,IAEf,OAAA,EAAA,EAAA,CAAEvgB,EAAK,KACL,OAAA,EAAA,KAAA,CAAMge,IACJA,EAAUiD,UAAUje,IAAI,MAAM3M,KAE5B9C,IACoB,mBAAXA,EACTA,KAEA,OAAA,EAAA,KAAA,CAAKA,GACoB,mBAAdA,EAAOD,IAChBC,EAAOD,UASjB,OAFA0tB,EAAUF,UAAYzqB,EAEf2qB,GD/HkB,CACzB,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MAEA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MAEA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,UACA,OAEA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,QACA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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","//@flow\nimport {combine} from './combine'\nimport {step} from './typedef'\nimport {createStateRef, readRef} from './stateRef'\nimport {callStackAReg, callARegStack} from './caller'\nimport {onConfigNesting} from './config'\nimport {getStoreState, getGraph} from './getter'\nimport {own} from './own'\nimport {is} from './is'\nimport {createStore} from './createUnit'\nimport {createEvent} from './createUnit'\nimport {createLinkNode} from './forward'\nimport {createNode} from './createNode'\nimport {addToRegion, readTemplate} from './region'\nimport {throwError} from './throw'\n\nexport const shapeToStore = shape => (is.unit(shape) ? shape : combine(shape))\n\nexport function sample(...args): any {\n  let target\n  let name\n  let metadata\n  onConfigNesting(args[0], (injectedData, userConfig) => {\n    metadata = injectedData\n    args = userConfig\n  })\n  let [source, clock, fn, greedy = false] = args\n  let sid\n  //config case\n  if (clock === undefined && 'source' in source) {\n    if ('clock' in source && source.clock == null)\n      throwError('config.clock should be defined')\n    clock = source.clock\n    fn = source.fn\n    greedy = source.greedy\n    //optional target & name accepted only from config\n    target = source.target\n    name = source.name\n    sid = source.sid\n    source = source.source\n  }\n  if (clock === undefined) {\n    //still undefined!\n    clock = source\n  }\n  name = metadata || name || source.shortName\n  source = shapeToStore(source)\n  clock = shapeToStore(clock)\n  if (typeof fn === 'boolean') {\n    greedy = fn\n    fn = null\n  }\n  const template = readTemplate()\n  const isUpward = !!target\n  if (!target) {\n    if (is.store(source) && is.store(clock)) {\n      const initialState = fn\n        ? fn(readRef(getStoreState(source)), readRef(getStoreState(clock)))\n        : readRef(getStoreState(source))\n      target = createStore(initialState, {name, sid})\n    } else {\n      target = createEvent(name)\n      if (template) {\n        getGraph(target).seq.push(template.loader)\n      }\n    }\n  }\n  const targetTemplate =\n    isUpward && is.unit(target) && getGraph(target).meta.nativeTemplate\n  if (is.store(source)) {\n    own(source, [\n      createLinkNode(clock, target, {\n        scope: {fn, targetTemplate},\n        node: [\n          template && template.loader,\n          //$off\n          !greedy && step.barrier({priority: 'sampler'}),\n          step.mov({\n            store: getStoreState(source),\n            to: fn ? 'a' : 'stack',\n          }),\n          fn && step.compute({fn: callARegStack}),\n          template && isUpward && template.upward,\n        ],\n        meta: {op: 'sample', sample: 'store'},\n      }),\n    ])\n  } else {\n    const hasSource = createStateRef(false)\n    const sourceState = createStateRef()\n    const clockState = createStateRef()\n    if (template) {\n      template.plain.push(hasSource, sourceState, clockState)\n    }\n    addToRegion(\n      createNode({\n        parent: source,\n        node: [\n          step.update({store: sourceState}),\n          step.mov({\n            from: 'value',\n            store: true,\n            target: hasSource,\n          }),\n        ],\n        family: {\n          owners: [source, target, clock],\n          links: target,\n        },\n        meta: {op: 'sample', sample: 'source'},\n      }),\n    )\n    own(source, [\n      createLinkNode(clock, target, {\n        scope: {\n          fn,\n          targetTemplate,\n        },\n        node: [\n          template && template.loader,\n          step.update({store: clockState}),\n          step.mov({store: hasSource}),\n          step.filter({fn: hasSource => hasSource}),\n          //$off\n          !greedy && step.barrier({priority: 'sampler'}),\n          step.mov({store: sourceState}),\n          step.mov({\n            store: clockState,\n            to: 'a',\n          }),\n          fn && step.compute({fn: callStackAReg}),\n          template && isUpward && template.upward,\n        ],\n        meta: {op: 'sample', sample: 'clock'},\n      }),\n    ])\n  }\n  return target\n}\n","//@flow\nimport {Event} from './unit.h'\nimport {is} from './is'\nimport {forIn} from './forIn'\n\nexport function split<S>(\n  unit: Event<S>,\n  cases: {[key: string]: (s: S) => boolean}\n): {[key: string]: Event<S>} {\n  const result = {}\n  let current: Event<S> = is.store(unit) ? unit.updates : unit\n  forIn(cases, (fn, key) => {\n    result[key] = current.filter({fn})\n    current = current.filter({\n      fn: data => !fn(data),\n    })\n  })\n  result.__ = current\n  return result\n}\n","//@flow\n\nimport {Store, Domain} from './unit.h'\nimport {is} from './is'\nimport {getParent} from './getter'\n\nexport const joinName = (unit: any, tag: string) => '' + unit.shortName + tag\n\nexport const mapName = (unit: any, name?: string) =>\n  name == null ? joinName(unit, ' → *') : name\n\nexport function unitObjectName(objOrArr, method: string = 'combine') {\n  let name = method + '('\n  let comma = ''\n  let i = 0\n  //$todo\n  for (const key in objOrArr) {\n    //$todo\n    const unit = objOrArr[key]\n    if (unit != null) {\n      name += comma\n      //$todo\n      name += is.unit(unit) ? unit.compositeName.fullName : unit.toString()\n    }\n    i += 1\n    /* inlined max object names constant */\n    if (i === 25) break\n    comma = ', '\n  }\n  name += ')'\n  return name\n}\n\nexport function setStoreName<State>(store: Store<State>, rawName: string) {\n  const compositeName = createName(rawName, getParent(store))\n  store.shortName = rawName\n  if (!store.compositeName) {\n    store.compositeName = compositeName\n    return\n  }\n  const currentComposite = store.compositeName\n  currentComposite.path = compositeName.path\n  currentComposite.shortName = compositeName.shortName\n  currentComposite.fullName = compositeName.fullName\n}\n\nexport type CompositeName = {\n  shortName: string,\n  fullName: string,\n  path: string[],\n}\n\nexport function createName(name: string, parent?: Domain): CompositeName {\n  let path\n  let fullName\n  let composite\n  const shortName = name\n  if (!parent) {\n    if (name.length === 0) {\n      path = []\n    } else {\n      path = [name]\n    }\n    fullName = name\n  } else {\n    composite = parent.compositeName\n    if (name.length === 0) {\n      path = composite.path\n      fullName = composite.fullName\n    } else {\n      path = composite.path.concat([name])\n      if (composite.fullName.length === 0) {\n        fullName = name\n      } else {\n        fullName = '' + composite.fullName + '/' + name\n      }\n    }\n  }\n  return {shortName, fullName, path}\n}\n","//@flow\n\nimport {Graph, Graphite, Cmd, StateRef} from './index.h'\nimport {getGraph, getOwners, getLinks} from './getter'\n\nconst arrifyNodes = (list: Graphite | Graphite[] = []): Graph[] => {\n  const result = []\n  if (Array.isArray(list)) {\n    for (let i = 0; i < list.length; i++) {\n      if (Array.isArray(list[i])) result.push(...list[i])\n      else result.push(list[i])\n    }\n  } else {\n    result.push(list)\n  }\n  return result.map(getGraph)\n}\nexport const addToReg = ({hasRef, type, data}, reg) => {\n  let store\n  if (hasRef) {\n    store = data.store\n    reg[store.id] = store\n  }\n  if (type === 'mov' && data.to === 'store') {\n    store = data.target\n    reg[store.id] = store\n  }\n}\nexport function createNode({\n  node = [],\n  from,\n  source,\n  parent = from || source,\n  to,\n  target,\n  child = to || target,\n  scope = {},\n  meta = {},\n  family: familyRaw = {type: 'regular'},\n}: {\n  node?: Array<Cmd | false | void | null>,\n  from?: Graphite | Graphite[],\n  source?: Graphite | Graphite[],\n  parent?: Graphite | Graphite[],\n  to?: Graphite | Graphite[],\n  target?: Graphite | Graphite[],\n  child?: Graphite | Graphite[],\n  scope?: {[name: string]: any},\n  meta?: {[name: string]: any},\n  family?: {\n    type?: 'regular' | 'crosslink' | 'domain',\n    links?: Graphite | Graphite[],\n    owners?: Graphite | Graphite[]\n  }\n}): Graph {\n  const sources = arrifyNodes(parent)\n  const links = arrifyNodes(familyRaw.links)\n  const owners = arrifyNodes(familyRaw.owners)\n  const seq: Cmd[] = []\n  const reg: {[id: string]: StateRef} = {}\n  for (let i = 0; i < node.length; i++) {\n    const item = node[i]\n    if (!item) continue\n    seq.push(item)\n    addToReg(item, reg)\n  }\n  const result: Graph = {\n    seq,\n    next: arrifyNodes(child),\n    meta,\n    scope,\n    family: {\n      type: familyRaw.type || 'crosslink',\n      links,\n      owners,\n    },\n    reg,\n  }\n  for (let i = 0; i < links.length; i++) {\n    getOwners(links[i]).push(result)\n  }\n  for (let i = 0; i < owners.length; i++) {\n    getLinks(owners[i]).push(result)\n  }\n  for (let i = 0; i < sources.length; i++) {\n    sources[i].next.push(result)\n  }\n  return result\n}\n","//@flow\nimport {getValue, getGraph, getParent} from './getter'\nimport {own} from './own'\n\nexport const addToRegion = unit => {\n  if (regionStack) own(getValue(regionStack), [unit])\n  return unit\n}\n\nlet regionStack = null\n\nexport const readTemplate = () => regionStack && regionStack.template\n\nexport function withRegion(unit: any, cb: () => void) {\n  regionStack = {\n    parent: regionStack,\n    value: unit,\n    template:\n      getGraph(unit).meta.template || (regionStack && regionStack.template),\n  }\n  try {\n    return cb()\n  } finally {\n    regionStack = getParent(regionStack)\n  }\n}\n","//@flow\n\nimport $$observable from 'symbol-observable'\n\nimport {is, isObject, isFunction, assertObject} from './is'\nimport {Store, Event, Effect} from './unit.h'\n\nimport {step} from './typedef'\nimport {createStateRef, readRef} from './stateRef'\nimport {nextUnitID} from './id'\nimport {callStackAReg, callARegStack, callStack} from './caller'\nimport {bind} from './bind'\nimport {own} from './own'\nimport {createNode} from './createNode'\nimport {launch, getCurrentPage} from './kernel'\n\nimport {Subscriber, Config} from './index.h'\nimport {createName, mapName, joinName} from './naming'\nimport {createLinkNode} from './forward'\nimport {watchUnit} from './watch'\nimport {createSubscription} from './subscription'\nimport {addToRegion, readTemplate} from './region'\nimport {\n  getSubscribers,\n  getConfig,\n  getNestedConfig,\n  getStoreState,\n  getGraph,\n  getParent,\n} from './getter'\nimport {throwError} from './throw'\n\nconst normalizeConfig = (part, config) => {\n  if (isObject(part)) {\n    normalizeConfig(getConfig(part), config)\n    if (part.name != null) {\n      if (isObject(part.name)) normalizeConfig(part.name, config)\n      else config.name = part.name\n    }\n    if (part.loc) config.loc = part.loc\n    if (part.sid || part.sid === null) config.sid = part.sid\n    if (part.handler) config.handler = part.handler\n    if (getParent(part)) config.parent = getParent(part)\n    if ('strict' in part) config.strict = part.strict\n    if (part.named) config.named = part.named\n    normalizeConfig(getNestedConfig(part), config)\n  }\n  return config\n}\n\nexport const applyParentEventHook = (source, target) => {\n  if (getParent(source)) getParent(source).hooks.event(target)\n}\n\nlet isStrict\nexport const initUnit = (kind, unit, rawConfigA, rawConfigB) => {\n  const config = normalizeConfig(\n    {\n      name: rawConfigB,\n      config: rawConfigA,\n    },\n    {},\n  )\n  const id = nextUnitID()\n  const {parent = null, sid = null, strict = true, named = null} = config\n  const name = named ? named : config.name || (kind === 'domain' ? '' : id)\n  const compositeName = createName(name, parent)\n  unit.kind = kind\n  unit.id = id\n  unit.sid = sid\n  unit.shortName = name\n  unit.parent = parent\n  unit.compositeName = compositeName\n  unit.defaultConfig = config\n  unit.thru = fn => fn(unit)\n  unit.getType = () => compositeName.fullName\n  isStrict = strict\n  return {unit: kind, name, sid, named}\n}\nexport const createNamedEvent = (named: string) => createEvent({named})\n\nconst createComputation = (from, to, op, fn) =>\n  createLinkNode(from, to, {\n    scope: {fn},\n    node: [step.compute({fn: callStack})],\n    meta: {op},\n  })\n\nconst createEventFiltration = (event, op, fn, node) => {\n  let config\n  if (isObject(fn)) {\n    config = fn\n    fn = fn.fn\n  }\n  const mapped = createEvent(joinName(event, ' →? *'), config)\n  createLinkNode(event, mapped, {\n    scope: {fn},\n    node,\n    meta: {op},\n  })\n  return mapped\n}\n\nexport function createEvent<Payload>(\n  nameOrConfig: any,\n  maybeConfig: any,\n): Event<Payload> {\n  const event: any = (payload: Payload, ...args: any[]) =>\n    event.create(payload, args, args)\n  event.graphite = createNode({\n    meta: initUnit('event', event, maybeConfig, nameOrConfig),\n  })\n  //eslint-disable-next-line no-unused-vars\n  event.create = (payload, _, args) => {\n    launch(event, payload)\n    return payload\n  }\n  event.watch = bind(watchUnit, event)\n  event.map = (fn: Function) => {\n    let config\n    let name\n    if (isObject(fn)) {\n      config = fn\n      name = fn.name\n      fn = fn.fn\n    }\n    const mapped = createEvent(mapName(event, name), config)\n    createComputation(event, mapped, 'map', fn)\n    return mapped\n  }\n  event.filter = fn => {\n    if (isFunction(fn)) {\n      console.error('.filter(fn) is deprecated, use .filterMap instead')\n      return filterMapEvent(event, fn)\n    }\n    return createEventFiltration(event, 'filter', fn.fn, [\n      step.filter({fn: callStack}),\n    ])\n  }\n  event.filterMap = bind(filterMapEvent, event)\n  event.prepend = fn => {\n    const contramapped: Event<any> = createEvent('* → ' + event.shortName, {\n      parent: getParent(event),\n    })\n    const template = readTemplate()\n    if (template) {\n      getGraph(contramapped).seq.push(template.upward)\n    }\n    createComputation(contramapped, event, 'prepend', fn)\n    applyParentEventHook(event, contramapped)\n    return contramapped\n  }\n  addObservableApi(event, event)\n  const template = readTemplate()\n  if (template) {\n    getGraph(event).meta.nativeTemplate = template\n  }\n  return addToRegion(event)\n}\n\nexport function filterMapEvent(\n  event: Event<any> | Effect<any, any, any>,\n  fn?: (val: any) => any,\n): any {\n  return createEventFiltration(event, 'filterMap', fn, [\n    step.compute({fn: callStack}),\n    step.check.defined(),\n  ])\n}\n\nexport function createStore<State>(\n  defaultState: State,\n  props?: Config,\n): Store<State> {\n  const plainState = createStateRef(defaultState)\n  const oldState = createStateRef(defaultState)\n  const updates = createNamedEvent('updates')\n  const template = readTemplate()\n  plainState.after = [{type: 'copy', to: oldState}]\n  if (template) {\n    template.plain.push(plainState)\n  }\n  const store: any = {\n    subscribers: new Map(),\n    updates,\n    defaultState,\n    stateRef: plainState,\n    getState() {\n      const currentPage = getCurrentPage()\n      if (!currentPage) return readRef(plainState)\n      if (currentPage.reg[plainState.id])\n        return readRef(currentPage.reg[plainState.id])\n      return readRef(plainState)\n    },\n    setState(state) {\n      launch({\n        target: store,\n        params: state,\n        defer: true,\n      })\n    },\n    reset(...units) {\n      for (const unit of units) store.on(unit, () => store.defaultState)\n      return store\n    },\n    on(events, fn) {\n      if (Array.isArray(events)) {\n        for (const event of events) {\n          onEvent(event, fn)\n        }\n      } else {\n        onEvent(events, fn)\n      }\n      return store\n    },\n    off(unit) {\n      const currentSubscription = getSubscribers(store).get(unit)\n      if (currentSubscription) {\n        currentSubscription()\n        getSubscribers(store).delete(unit)\n      }\n      return store\n    },\n    map(fn, firstState?: any) {\n      let config\n      let name\n      if (isObject(fn)) {\n        config = fn\n        name = fn.name\n        firstState = fn.firstState\n        fn = fn.fn\n      }\n      let lastResult\n      const storeState = store.getState()\n      const template = readTemplate()\n      if (template) {\n        lastResult = null\n      } else if (storeState !== undefined) {\n        lastResult = fn(storeState, firstState)\n      }\n\n      const innerStore: Store<any> = createStore(lastResult, {\n        name: mapName(store, name),\n        config,\n        strict: false,\n      })\n      const linkNode = updateStore(store, innerStore, 'map', false, fn)\n\n      getStoreState(innerStore).before = [\n        {\n          type: 'map',\n          fn,\n          from: plainState,\n        },\n      ]\n      if (template) {\n        if (!template.plain.includes(plainState)) {\n          if (!linkNode.seq.includes(template.loader)) {\n            linkNode.seq.unshift(template.loader)\n          }\n        }\n      }\n      return innerStore\n    },\n    [$$observable]: () => addObservableApi(store, {}),\n  }\n  function onEvent(event, fn) {\n    store.off(event)\n    getSubscribers(store).set(\n      event,\n      createSubscription(updateStore(event, store, 'on', true, fn)),\n    )\n  }\n  store.graphite = createNode({\n    scope: {state: plainState},\n    node: [\n      step.check.defined(),\n      step.update({\n        store: plainState,\n      }),\n      step.check.changed({\n        store: oldState,\n      }),\n      step.update({\n        store: oldState,\n      }),\n    ],\n    child: updates,\n    meta: initUnit('store', store, props),\n  })\n  if (isStrict && defaultState === undefined)\n    throwError(\"current state can't be undefined, use null instead\")\n  if (template) {\n    getGraph(store).meta.nativeTemplate = template\n  }\n  store.watch = store.subscribe = (\n    eventOrFn: Event<any> | Function,\n    fn?: Function,\n  ) => {\n    if (!fn || !is.unit(eventOrFn)) {\n      if (!isFunction(eventOrFn)) throwError('watch requires function handler')\n      const template = readTemplate()\n      if (template) {\n        template.watch.push({\n          of: plainState,\n          fn: eventOrFn,\n        })\n      } else {\n        eventOrFn(store.getState())\n      }\n      return watchUnit(store, eventOrFn)\n    }\n    if (!isFunction(fn)) throwError('second argument should be a function')\n    return eventOrFn.watch(payload => fn(store.getState(), payload))\n  }\n  own(store, [updates])\n  return addToRegion(store)\n}\n\nconst addObservableApi = (unit, target) => {\n  target.subscribe = (observer: Subscriber<any>) => {\n    assertObject(observer)\n    return unit.watch(upd => {\n      if (observer.next) {\n        observer.next(upd)\n      }\n    })\n  }\n  target[$$observable] = () => target\n  return target\n}\n\nconst updateStore = (\n  from,\n  store: Store<any>,\n  op,\n  stateFirst: boolean,\n  fn: Function,\n) => {\n  const storeRef = getStoreState(store)\n  const node = [\n    step.mov({store: storeRef, to: 'a'}),\n    step.compute({\n      fn: stateFirst ? callARegStack : callStackAReg,\n    }),\n    step.check.defined(),\n    step.check.changed({store: storeRef}),\n    step.update({store: storeRef}),\n  ]\n  const template = readTemplate()\n  if (template) {\n    node.unshift(template.loader)\n    node.push(template.upward)\n    if (is.store(from)) {\n      const ref = getStoreState(from)\n      if (!template.plain.includes(ref)) {\n        //if (!node.includes(template.loader)) {\n        //  node.unshift(template.loader)\n        //}\n        if (!template.closure.includes(ref)) {\n          template.closure.push(ref)\n        }\n        if (!storeRef.before) storeRef.before = []\n        storeRef.before.push({\n          type: 'closure',\n          of: ref,\n        })\n      }\n    } else {\n      //if (!node.includes(template.loader)) {\n      //  node.unshift(template.loader)\n      //}\n    }\n  }\n  return createLinkNode(from, store, {\n    scope: {fn},\n    node,\n    meta: {op},\n  })\n}\n","//@flow\n\nimport {Store} from './unit.h'\nimport {createStore} from './createUnit'\nimport {createStateRef} from './stateRef'\nimport {step} from './typedef'\nimport {onConfigNesting} from './config'\nimport {getStoreState} from './getter'\nimport {is, isFunction} from './is'\nimport {unitObjectName} from './naming'\nimport {createLinkNode} from './forward'\nimport {throwError} from './throw'\nimport {readTemplate} from './region'\nimport {forIn} from './forIn'\n\nexport function combine(...args: any[]): Store<any> {\n  if (args.length === 0) throwError('at least one argument required')\n  let handler\n  let stores\n  let config\n  onConfigNesting(args[0], (injectedData, userConfig) => {\n    config = injectedData\n    args = userConfig\n  })\n  const rawHandler = args[args.length - 1]\n  if (isFunction(rawHandler)) {\n    stores = args.slice(0, -1)\n    handler = rawHandler\n  } else {\n    stores = args\n  }\n\n  let structStoreShape\n  let shapeReady\n  if (stores.length === 1) {\n    const obj = stores[0]\n    /*\n      without edge case combine(Color, (Color) => '~')\n      */\n    if (!is.store(obj)) {\n      /*\n      case combine([R,G,B], ([R,G,B]) => '~')\n      case combine({R,G,B}, ({R,G,B}) => '~')\n\n      edge case combine([Color], ([Color]) => '~')\n      edge case combine({Color}, ({Color}) => '~')\n\n      edge case combine([R,G,B])\n      edge case combine({R,G,B})\n\n      edge case combine([Color])\n      edge case combine({Color})\n      */\n      structStoreShape = obj\n      shapeReady = true\n    }\n  }\n  if (!shapeReady) {\n    /*\n    case combine(R,G,B, (R,G,B) => '~')\n    */\n    structStoreShape = stores\n    /*\n    without edge case combine(R,G,B)\n    without edge case combine(Color)\n    */\n    if (handler) {\n      handler = spreadArgs(handler)\n    }\n  }\n  return storeCombination(\n    Array.isArray(structStoreShape),\n    structStoreShape,\n    config,\n    handler,\n  )\n}\n\nconst spreadArgs = fn => list => fn(...list)\n\nconst storeCombination = (\n  isArray,\n  obj: any,\n  config?: string,\n  fn?: Function,\n) => {\n  const clone = isArray ? list => list.slice() : obj => Object.assign({}, obj)\n  const defaultState = isArray ? [] : {}\n  const template = readTemplate()\n  const stateNew = clone(defaultState)\n  const rawShape = createStateRef(stateNew)\n  const isFresh = createStateRef(true)\n  rawShape.type = isArray ? 'list' : 'shape'\n  if (template) {\n    template.plain.push(rawShape, isFresh)\n  }\n  const store = createStore(stateNew, {\n    name: config ? config : unitObjectName(obj),\n  })\n  const node = [\n    step.check.defined(),\n    step.mov({\n      store: rawShape,\n      to: 'a',\n    }),\n    //prettier-ignore\n    step.filter({\n      fn: (upd, {key}, {a}) => upd !== a[key],\n    }),\n    step.mov({\n      store: isFresh,\n      to: 'b',\n    }),\n    step.compute({\n      fn(upd, {clone, key}, reg) {\n        if (reg.b) {\n          reg.a = clone(reg.a)\n        }\n        reg.a[key] = upd\n      },\n    }),\n    step.mov({\n      from: 'a',\n      target: rawShape,\n    }),\n    step.mov({\n      from: 'value',\n      store: false,\n      target: isFresh,\n    }),\n    step.barrier({priority: 'barrier'}),\n    step.mov({\n      from: 'value',\n      store: true,\n      target: isFresh,\n    }),\n    step.mov({store: rawShape}),\n    fn && step.compute({fn}),\n    step.check.changed({\n      store: getStoreState(store),\n    }),\n  ]\n  const before = (rawShape.before = [])\n  forIn(obj, (child, key) => {\n    if (!is.store(child)) {\n      stateNew[key] = defaultState[key] = child\n      return\n    }\n    defaultState[key] = child.defaultState\n    stateNew[key] = child.getState()\n    const linkNode = createLinkNode(child, store, {\n      scope: {key, clone},\n      node,\n      meta: {op: 'combine'},\n    })\n    const childRef = getStoreState(child)\n    before.push({\n      type: 'field',\n      field: key,\n      from: childRef,\n    })\n    if (template) {\n      if (!template.plain.includes(childRef)) {\n        linkNode.seq.unshift(template.loader)\n      }\n    }\n  })\n\n  store.defaultShape = obj\n  rawShape.after = [\n    fn\n      ? {\n        type: 'map',\n        to: getStoreState(store),\n        fn,\n      }\n      : {\n        type: 'copy',\n        to: getStoreState(store),\n      },\n  ]\n  if (!template) {\n    store.defaultState = fn\n      ? (getStoreState(store).current = fn(stateNew))\n      : defaultState\n  }\n  return store\n}\n","//@flow\n\nimport {Effect} from './unit.h'\nimport {step} from './typedef'\nimport {getGraph, getParent} from './getter'\nimport {own} from './own'\nimport {createNode} from './createNode'\nimport {launch} from './kernel'\nimport {\n  createNamedEvent,\n  createStore,\n  createEvent,\n  filterMapEvent,\n} from './createUnit'\nimport {createDefer} from './defer'\nimport {isObject, isFunction} from './is'\n\nexport function createEffect<Payload, Done>(\n  nameOrConfig: any,\n  maybeConfig: any,\n) {\n  const instance = createEvent(nameOrConfig, maybeConfig)\n  let handler =\n    instance.defaultConfig.handler ||\n    (value => {\n      console.error(`no handler used in ${instance.getType()}`)\n      return Promise.resolve()\n    })\n\n  getGraph(instance).meta.onCopy = ['runner']\n  getGraph(instance).meta.unit = instance.kind = 'effect'\n  instance.use = fn => {\n    handler = fn\n    return instance\n  }\n  const anyway = (instance.finally = createNamedEvent('finally'))\n  const done = (instance.done = filterMapEvent(anyway, {\n    named: 'done',\n    fn({status, params, result}) {\n      if (status === 'done') return {params, result}\n    },\n  }))\n  const fail = (instance.fail = filterMapEvent(anyway, {\n    named: 'fail',\n    fn({status, params, error}) {\n      if (status === 'fail') return {params, error}\n    },\n  }))\n  const doneData = (instance.doneData = done.map({\n    named: 'doneData',\n    fn: ({result}) => result,\n  }))\n  const failData = (instance.failData = fail.map({\n    named: 'failData',\n    fn: ({error}) => error,\n  }))\n\n  const effectRunner = createNode({\n    scope: {\n      getHandler: (instance.use.getCurrent = () => handler),\n      finally: anyway,\n    },\n    node: [\n      step.run({\n        fn({params, req}, {finally: anyway, getHandler}, {page}) {\n          const onResolve = onSettled({\n            params,\n            req,\n            ok: true,\n            anyway,\n            page,\n          })\n          const onReject = onSettled({\n            params,\n            req,\n            ok: false,\n            anyway,\n            page,\n          })\n          let result\n          try {\n            result = getHandler()(params)\n          } catch (err) {\n            return void onReject(err)\n          }\n          if (isObject(result) && isFunction(result.then)) {\n            result.then(onResolve, onReject)\n          } else {\n            onResolve(result)\n          }\n        },\n      }),\n    ],\n    meta: {\n      op: 'fx',\n      fx: 'runner',\n      onCopy: ['finally'],\n    },\n  })\n  getGraph(instance).scope.runner = effectRunner\n  getGraph(instance).seq.push(\n    step.compute({\n      fn(params, scope, stack) {\n        // empty stack means that this node was launched directly\n        if (!getParent(stack)) return params\n        return {\n          params,\n          req: {\n            rs(data) {},\n            rj(data) {},\n          },\n        }\n      },\n    }),\n    step.run({\n      fn(upd, {runner}) {\n        launch({\n          target: runner,\n          params: upd,\n          defer: true,\n        })\n        return upd.params\n      },\n    }),\n  )\n  instance.create = (params: Payload) => {\n    const req = createDefer()\n    launch(instance, {params, req})\n    return req.req\n  }\n\n  const inFlight = (instance.inFlight = createStore(0, {named: 'inFlight'})\n    .on(instance, x => x + 1)\n    .on(anyway, x => x - 1))\n\n  const pending = (instance.pending = inFlight.map({\n    fn: amount => amount > 0,\n    named: 'pending',\n  }))\n\n  own(instance, [\n    anyway,\n    done,\n    fail,\n    doneData,\n    failData,\n    pending,\n    inFlight,\n    effectRunner,\n  ])\n  return instance\n}\n\nexport const onSettled = ({params, req, ok, anyway, page}) => data =>\n  launch({\n    target: [anyway, sidechain],\n    params: [\n      ok\n        ? {\n          status: 'done',\n          params,\n          result: data,\n        }\n        : {\n          status: 'fail',\n          params,\n          error: data,\n        },\n      {\n        fn: ok ? req.rs : req.rj,\n        value: data,\n      },\n    ],\n    defer: true,\n    page,\n  })\n\nconst sidechain = createNode({\n  node: [\n    step.run({\n      fn({fn, value}) {\n        fn(value)\n      },\n    }),\n  ],\n  meta: {op: 'fx', fx: 'sidechain'},\n})\n","//@flow\n\nexport function createDefer(): {\n  rs: (value: any) => any,\n  rj: (value: any) => any,\n  req: Promise<any>,\n  } {\n  const result = {}\n  result.req = new Promise((rs, rj) => {\n    result.rs = rs\n    result.rj = rj\n  })\n  result.req.catch(err => {})\n  return result\n}\n","//@flow\n\nimport {combine} from './combine'\nimport {createEffect, onSettled} from './createEffect'\nimport {applyParentEventHook} from './createUnit'\nimport {onConfigNesting} from './config'\nimport {getGraph, getStoreState} from './getter'\nimport {own} from './own'\nimport {is} from './is'\nimport {step} from './typedef'\nimport {launch} from './kernel'\nimport {addToReg} from './createNode'\n\nexport function attach(config) {\n  let injected\n  onConfigNesting(config, (injectedData, userConfig) => {\n    injected = injectedData\n    config = userConfig\n  })\n  const {source, effect, mapParams} = config\n  const attached = createEffect(config, injected)\n  const {runner} = getGraph(attached).scope\n\n  let runnerSteps\n  const runnerFn = (\n    {params, req},\n    {finally: anyway, effect},\n    {a: states, page},\n  ) =>\n    launch({\n      target: effect,\n      params: {\n        params: mapParams(params, states),\n        req: {\n          rs: onSettled({\n            params,\n            req,\n            ok: true,\n            anyway,\n            page,\n          }),\n          rj: onSettled({\n            params,\n            req,\n            ok: false,\n            anyway,\n            page,\n          }),\n        },\n      },\n      page,\n      defer: true,\n    })\n\n  if (source) {\n    let state\n    if (is.store(source)) state = source\n    else {\n      state = combine(source)\n      own(attached, [state])\n    }\n    const readStateRef = step.mov({\n      from: 'store',\n      store: getStoreState(state),\n      to: 'a',\n    })\n    runnerSteps = [\n      /* let another side-effects run first */\n      step.run({fn: _ => _}),\n      /* read state. assumed it already stable here because of previous step */\n      readStateRef,\n      /* no need for step.run because of first step */\n      step.compute({fn: runnerFn}),\n    ]\n    addToReg(readStateRef, runner.reg)\n  } else {\n    runnerSteps = [step.run({fn: runnerFn})]\n  }\n  runner.scope.effect = effect\n  runner.meta.onCopy.push('effect')\n  runner.seq.splice(0, 1, ...runnerSteps)\n  applyParentEventHook(effect, attached)\n  return attached\n}\n","//@flow\n\nimport {Store} from './unit.h'\nimport {createEvent, applyParentEventHook} from './createUnit'\nimport {forIn} from './forIn'\nimport {getParent} from './getter'\n\nexport function createApi(\n  store: Store<any>,\n  setters: {[key: string]: Function},\n) {\n  const result = {}\n  forIn(setters, (fn, key) => {\n    const event = (result[key] = createEvent(key, {parent: getParent(store)}))\n    store.on(event, fn)\n    applyParentEventHook(store, event)\n  })\n  return result\n}\n","//@flow\n\nimport {Store, Event, Effect, Domain} from './unit.h'\nimport {own} from './own'\nimport {createNode} from './createNode'\nimport {Config} from './index.h'\nimport {\n  createEvent,\n  createStore,\n  createNamedEvent,\n  initUnit,\n} from './createUnit'\nimport {createEffect} from './createEffect'\nimport {forward} from './forward'\nimport {addToRegion} from './region'\nimport {forIn} from './forIn'\nimport {getParent} from './getter'\n\nconst createHook = (trigger: Event<any>, acc: Set<any>, node) => {\n  trigger.watch(data => {\n    own(node, [data])\n    acc.add(data)\n    if (!data.ownerSet) data.ownerSet = acc\n    if (!getParent(data)) data.parent = node\n  })\n  own(node, [trigger])\n  return (hook: (data: any) => any) => {\n    acc.forEach(hook)\n    return trigger.watch(hook)\n  }\n}\n\nexport function createDomain(nameOrConfig: any, maybeConfig: any): Domain {\n  const domains: Set<Domain> = new Set()\n  const stores: Set<Store<any>> = new Set()\n  const effects: Set<Effect<any, any, any>> = new Set()\n  const events: Set<Event<any>> = new Set()\n\n  const node = createNode({\n    family: {type: 'domain'},\n  })\n\n  const result = {\n    history: {\n      domains,\n      stores,\n      effects,\n      events,\n    },\n    graphite: node,\n  }\n\n  node.meta = initUnit('domain', result, maybeConfig, nameOrConfig)\n  const [event, effect, store, domain] = [\n    'onEvent',\n    'onEffect',\n    'onStore',\n    'onDomain',\n  ].map(createNamedEvent)\n\n  result.hooks = {\n    event,\n    effect,\n    store,\n    domain,\n  }\n  result.onCreateEvent = createHook(event, events, result)\n  result.onCreateEffect = createHook(effect, effects, result)\n  result.onCreateStore = createHook(store, stores, result)\n  result.onCreateDomain = createHook(domain, domains, result)\n\n  result.createEvent = result.event = (nameOrConfig, config?: Config) =>\n    event(\n      createEvent(nameOrConfig, {\n        parent: result,\n        config,\n      }),\n    )\n  result.createEffect = result.effect = (nameOrConfig, config?: Config) =>\n    effect(\n      createEffect(nameOrConfig, {\n        parent: result,\n        config,\n      }),\n    )\n  result.createDomain = result.domain = (nameOrConfig, config?: Config) =>\n    createDomain({\n      name: nameOrConfig,\n      parent: result,\n      config,\n    })\n  result.createStore = result.store = (state: any, config?: Config) =>\n    store(\n      createStore(state, {\n        parent: result,\n        config,\n      }),\n    )\n  addToRegion(result)\n  const parent = getParent(result)\n  if (parent) {\n    forIn(result.hooks, (from, key) => {\n      forward({from, to: parent.hooks[key]})\n    })\n    parent.hooks.domain(result)\n  }\n  return result\n}\n","//@flow\n\nimport $$observable from 'symbol-observable'\nimport {Event} from './unit.h'\nimport {clearNode} from './clearNode'\nimport {createEvent} from './createUnit'\nimport {bind2} from './bind'\nimport {assertObject} from './is'\nimport {throwError} from './throw'\n\nexport function fromObservable<T>(observable: mixed): Event<T> {\n  assertObject(observable)\n  const observableItem =\n    $$observable in observable ? observable[$$observable]() : observable\n  if (!observableItem.subscribe)\n    throwError('expect observable to have .subscribe')\n  const event: Event<T> = createEvent()\n  const disposer = bind2(clearNode, event, undefined)\n  observableItem.subscribe({\n    next: event,\n    error: disposer,\n    complete: disposer,\n  })\n  return event\n}\n","//@flow\n\nimport {onConfigNesting} from './config'\nimport {createLinkNode} from './forward'\nimport {sample} from './sample'\nimport {createEvent} from './createUnit'\nimport {combine} from './combine'\nimport {step} from './typedef'\nimport {callStack} from './caller'\nimport {is, isFunction} from './is'\nimport {createNode} from './createNode'\nimport {addToRegion} from './region'\nimport {throwError} from './throw'\n\nexport function guard(source, config) {\n  const meta = {op: 'guard'}\n  let rawName = 'guard'\n  onConfigNesting(source, (injectedData, userConfig) => {\n    if (injectedData.name) {\n      rawName = injectedData.name\n    }\n    meta.config = injectedData\n    ;[source, config] = userConfig\n  })\n  if (!config) {\n    config = source\n    source = config.source\n  }\n  const {filter, greedy, name = rawName} = config\n  const target = config.target || createEvent(name, meta.config)\n  if (!is.unit(source)) source = combine(source)\n\n  if (is.unit(filter)) {\n    sample({\n      source: filter,\n      clock: source,\n      target: addToRegion(\n        createNode({\n          node: [\n            step.filter({\n              fn: ({guard}) => guard,\n            }),\n            step.compute({\n              fn: ({data}) => data,\n            }),\n          ],\n          child: target,\n          meta,\n          family: {\n            owners: [source, filter, target],\n            links: target,\n          },\n        }),\n      ),\n      fn: (guard, data) => ({guard, data}),\n      greedy,\n      name,\n    })\n  } else {\n    if (!isFunction(filter)) throwError('`filter` should be function or unit')\n    createLinkNode(source, target, {\n      scope: {fn: filter},\n      node: [step.filter({fn: callStack})],\n      meta,\n    })\n  }\n  return target\n}\n","// @flow\n\nimport {Store, Event, Effect} from './unit.h'\nimport {createEvent} from './createUnit'\nimport {forward} from './forward'\nimport {unitObjectName} from './naming'\n\nexport function merge<T>(\n  events: $ReadOnlyArray<Event<T> | Store<T> | Effect<T, any, any>>,\n): Event<T> {\n  const result = createEvent(unitObjectName(events, 'merge'))\n  forward({\n    from: events,\n    to: result,\n    meta: {op: 'merge'},\n  })\n  return result\n}\n","//@flow\nimport {createStore} from './createUnit'\nimport {is} from './is'\nimport {forIn} from './forIn'\nimport {getParent} from './getter'\n\nexport function restore(obj: any, defaultState: any, config?: any): any {\n  if (is.store(obj)) {\n    return obj\n  }\n  if (is.unit(obj)) {\n    const domain = getParent(obj)\n    let result\n    if (is.event(obj)) {\n      result = createStore(defaultState, {\n        parent: domain,\n        name: obj.shortName,\n        ɔ: config,\n      }).on(obj, (_, v) => v)\n    }\n    if (is.effect(obj)) {\n      result = createStore(defaultState, {\n        parent: domain,\n        name: obj.shortName,\n        ɔ: config,\n      }).on(obj.done, (_, {result}) => result)\n    }\n    if (domain) domain.hooks.store(result)\n    return result\n  }\n  const result = {}\n  forIn(obj, (value, key) => {\n    result[key] = is.store(value) ? value : createStore(value, {name: key})\n  })\n  return result\n}\n\nexport {\n  restore as restoreEvent,\n  restore as restoreEffect,\n  restore as restoreObject,\n}\n","//@flow\n\nimport {kind} from './index.h'\n\nexport const store: kind = 'store'\nexport const event: kind = 'event'\nexport const effect: kind = 'effect'\nexport const domain: kind = 'domain'\n","//@flow\n\nimport {kind} from './index.h'\nimport {\n  store as storeKind,\n  event as eventKind,\n  effect as effectKind,\n  domain as domainKind,\n} from './kind'\n\nimport {isObject, isFunction} from './is'\n\nexport const unit = (obj: mixed) =>\n  (isFunction(obj) || isObject(obj)) && 'kind' in obj\n\nconst is = (type: kind) => (obj: mixed) => unit(obj) && obj.kind === type\n\nexport const store = is(storeKind)\nexport const event = is(eventKind)\nexport const effect = is(effectKind)\nexport const domain = is(domainKind)\n","//@flow\n\nexport const throwError = (message: string) => {\n  throw Error(message)\n}\n","//@flow\n\n//eslint-disable-next-line\nexport * as is from './validate'\nimport {throwError} from './throw'\n\nexport const isObject = (value: any) =>\n  typeof value === 'object' && value !== null\nexport const isFunction = (value: any) => typeof value === 'function'\n\nexport const assertObject = (value: any) => {\n  if (!isObject(value) && !isFunction(value))\n    throwError('expect value to be an object') // or function\n}\n","//@flow\n\nimport {Graphite, Graph} from './index.h'\n\nexport const getGraph = (graph: Graphite): Graph => graph.graphite || graph\nexport const getOwners = (node: Graph) => node.family.owners\nexport const getLinks = (node: Graph) => node.family.links\nexport const getStoreState = store => store.stateRef\nexport const getConfig = opts => opts.config\nexport const getNestedConfig = opts => opts.ɔ\nexport const getValue = stack => stack.value\nexport const getSubscribers = store => store.subscribers\nexport const getParent = unit => unit.parent\n","//@flow\n\nconst idCount = () => {\n  let id = 0\n  return () => (++id).toString(36)\n}\n\nexport const nextUnitID = idCount()\nexport const nextStepID = idCount()\n","//@flow\n\nexport const bind = (fn: Function, target: any) => fn.bind(null, target)\nexport const bind2 = (fn: Function, target: any, arg: any) =>\n  fn.bind(null, target, arg)\n","//@flow\nimport {StateRef, Run, Filter, Compute, Barrier, Check, Mov} from './index.h'\nimport {nextStepID} from './id'\nimport {bind2} from './bind'\n\nconst cmd = (type: any, hasRef: boolean, data: any): any => ({\n  id: nextStepID(),\n  type,\n  data,\n  hasRef,\n})\n\nlet nextBarrierID = 0\n\nexport const barrier: (data: {\n  priority?: 'barrier' | 'sampler',\n}) => Barrier = ({priority = 'barrier'}) =>\n  cmd('barrier', false, {\n    barrierID: ++nextBarrierID,\n    priority,\n  })\nexport const mov: (data: {\n  from?: 'value' | 'store' | 'stack' | 'a' | 'b',\n  to?: 'stack' | 'a' | 'b',\n  store?: any,\n  target?: any,\n}) => Mov = ({\n  from = 'store',\n  store,\n  target,\n  to = target ? 'store' : 'stack',\n}) => cmd('mov', from === 'store', {from, store, to, target})\nexport const check: {\n  defined(): Check,\n  changed({store: StateRef}): Check,\n} = {\n  defined: () => cmd('check', false, {type: 'defined'}),\n  changed: ({store}) => cmd('check', true, {type: 'changed', store}),\n}\nexport const compute: (data: {\n  fn: (data: any, scope: {[key: string]: any}) => any\n}) => Compute = bind2(cmd, 'compute', false)\nexport const filter: (data: {\n  fn: (data: any, scope: {[key: string]: any}) => any\n}) => Filter = bind2(cmd, 'filter', false)\nexport const run: (data: {\n  fn: (data: any, scope: {[key: string]: any}) => any\n}) => Run = bind2(cmd, 'run', false)\nexport const update: (data: {\n  store: StateRef,\n}) => Mov = ({store}) => mov({from: 'stack', target: store})\n","//@flow\n\nimport {Graphite, Graph} from './index.h'\nimport {readRef} from './stateRef'\nimport {getGraph, getValue} from './getter'\n\n/** Names of priority groups */\ntype PriorityTag = 'child' | 'pure' | 'barrier' | 'sampler' | 'effect'\n\n/**\n * Position in the current branch,\n * including call stack, priority type\n * and index of next step in the executed Graph\n */\ntype Layer = {\n  idx: number,\n  stack: Stack,\n  type: PriorityTag,\n  id: number,\n}\n\n/** Call stack */\ntype Stack = {\n  value: any,\n  a: any,\n  b: any,\n  parent: Stack | null,\n  node: Graph,\n  page: {[id: string]: any} | null,\n}\n\n/** Queue as linked list or skew heap */\ntype QueueItem = {\n  /** node value */\n  v: Layer,\n  /** left node. always null in queue but used in skew heap */\n  l: QueueItem | null,\n  /** right node */\n  r: QueueItem | null,\n}\ntype QueueBucket = {\n  first: QueueItem | null,\n  last: QueueItem | null,\n  size: number,\n}\n\n/** Dedicated local metadata */\ntype Local = {\n  fail: boolean,\n  scope: {[key: string]: any},\n}\n\nlet heap: QueueItem | null = null\n\nconst merge = (a: QueueItem | null, b: QueueItem | null): QueueItem | null => {\n  if (!a) return b\n  if (!b) return a\n\n  let ret\n  const isSameType = a.v.type === b.v.type\n  if (\n    /**\n     * if both nodes has the same PriorityType\n     * and first node is created after second one\n     */\n    (isSameType && a.v.id > b.v.id) ||\n    /** if first node is \"sampler\" and second node is \"barrier\" */\n    (!isSameType && a.v.type === 'sampler')\n  ) {\n    ret = a\n    a = b\n    b = ret\n  }\n  ret = merge(a.r, b)\n  a.r = a.l\n  a.l = ret\n\n  return a\n}\n\n/** queue buckets for each PriorityType */\nconst queue: QueueBucket[] = []\nlet ix = 0\nwhile (ix < 5) {\n  /**\n   * although \"sampler\" and \"barrier\" are using heap instead of linked list,\n   * their buckets are still useful: they maintains size of heap queue\n   */\n  queue.push({first: null, last: null, size: 0})\n  ix += 1\n}\n\nconst deleteMin = () => {\n  for (let i = 0; i < 5; i++) {\n    const list = queue[i]\n    if (list.size > 0) {\n      /**\n       * second bucket is for \"barrier\" PriorityType (used in combine)\n       * and third bucket is for \"sampler\" PriorityType (used in sample and guard)\n       */\n      if (i === 2 || i === 3) {\n        list.size -= 1\n        const value = heap.v\n        heap = merge(heap.l, heap.r)\n        return value\n      }\n      if (list.size === 1) {\n        list.last = null\n      }\n      const item = list.first\n      list.first = item.r\n      list.size -= 1\n      return item.v\n    }\n  }\n}\nconst pushFirstHeapItem = (\n  type: PriorityTag,\n  page: {[id: string]: any} | null,\n  node: Graph,\n  parent: Stack | null,\n  value: any,\n) =>\n  pushHeap(\n    0,\n    {\n      a: null,\n      b: null,\n      node,\n      parent,\n      value,\n      page,\n    },\n    type,\n  )\nconst pushHeap = (idx: number, stack: Stack, type: PriorityTag, id = 0) => {\n  const priority = getPriority(type)\n  const bucket: QueueBucket = queue[priority]\n  const item: QueueItem = {\n    v: {\n      idx,\n      stack,\n      type,\n      id,\n    },\n    l: 0,\n    r: 0,\n  }\n  /**\n   * second bucket is for \"barrier\" PriorityType (used in combine)\n   * and third bucket is for \"sampler\" PriorityType (used in sample and guard)\n   */\n  if (priority === 2 || priority === 3) {\n    heap = merge(heap, item)\n  } else {\n    if (bucket.size === 0) {\n      bucket.first = item\n    } else {\n      bucket.last.r = item\n    }\n    bucket.last = item\n  }\n  bucket.size += 1\n}\n\nconst getPriority = (t: PriorityTag) => {\n  switch (t) {\n    case 'child':\n      return 0\n    case 'pure':\n      return 1\n    case 'barrier':\n      return 2\n    case 'sampler':\n      return 3\n    case 'effect':\n      return 4\n    default:\n      return -1\n  }\n}\n\nconst barriers = new Set()\n\nlet alreadyStarted = false\nlet currentPage = null\nexport const getCurrentPage = () => currentPage\n\n/** main execution method */\nconst exec = () => {\n  const lastStartedState = {alreadyStarted, currentPage}\n  alreadyStarted = true\n  let stop\n  let skip\n  let graph\n  let value\n  let page\n  let reg\n  mem: while ((value = deleteMin())) {\n    const {idx, stack, type} = value\n    graph = stack.node\n    currentPage = page = stack.page\n    reg = (page ? page : graph).reg\n    const local: Local = {\n      fail: false,\n      scope: graph.scope,\n    }\n    stop = skip = false\n    for (let stepn = idx; stepn < graph.seq.length && !stop; stepn++) {\n      const step = graph.seq[stepn]\n      const data = step.data\n      switch (step.type) {\n        case 'barrier': {\n          let id = data.barrierID\n          if (page) {\n            id = `${page.fullID}_${id}`\n          }\n          const priority = data.priority\n          if (stepn !== idx || type !== priority) {\n            if (!barriers.has(id)) {\n              barriers.add(id)\n              pushHeap(stepn, stack, priority, id)\n            }\n            continue mem\n          }\n          barriers.delete(id)\n          break\n        }\n        case 'mov': {\n          let value\n          //prettier-ignore\n          switch (data.from) {\n            case 'stack': value = getValue(stack); break\n            case 'a': value = stack.a; break\n            case 'b': value = stack.b; break\n            case 'value': value = data.store; break\n            case 'store':\n              if (!reg[data.store.id]) {\n                // if (!page.parent) {\n                stack.page = page = null\n                reg = graph.reg\n                // }\n              }\n              value = readRef(reg[data.store.id])\n              break\n          }\n          //prettier-ignore\n          switch (data.to) {\n            case 'stack': stack.value = value; break\n            case 'a': stack.a = value; break\n            case 'b': stack.b = value; break\n            case 'store':\n              reg[data.target.id].current = value\n              break\n          }\n          break\n        }\n        case 'check':\n          switch (data.type) {\n            case 'defined':\n              skip = getValue(stack) === undefined\n              break\n            case 'changed':\n              skip = getValue(stack) === readRef(reg[data.store.id])\n              break\n          }\n          break\n        case 'filter':\n          /**\n           * handled edge case: if step.fn will throw,\n           * tryRun will return null\n           * thereby forcing that branch to stop\n           */\n          skip = !tryRun(local, data, stack)\n          break\n        case 'run':\n          /** exec 'compute' step when stepn === idx */\n          if (stepn !== idx || type !== 'effect') {\n            pushHeap(stepn, stack, 'effect')\n            continue mem\n          }\n        case 'compute':\n          stack.value = tryRun(local, data, stack)\n          break\n      }\n      stop = local.fail || skip\n    }\n    if (!stop) {\n      for (let stepn = 0; stepn < graph.next.length; stepn++) {\n        pushFirstHeapItem(\n          'child',\n          page,\n          graph.next[stepn],\n          stack,\n          getValue(stack),\n        )\n      }\n    }\n  }\n  alreadyStarted = lastStartedState.alreadyStarted\n  currentPage = lastStartedState.currentPage\n}\nexport const launch = (unit: Graphite, payload: any, upsert?: boolean) => {\n  let page = currentPage\n  let stack = null\n  if (unit.target) {\n    payload = unit.params\n    upsert = unit.defer\n    page = 'page' in unit ? unit.page : page\n    if (unit.stack) stack = unit.stack\n    unit = unit.target\n  }\n  if (Array.isArray(unit)) {\n    for (let i = 0; i < unit.length; i++) {\n      pushFirstHeapItem('pure', page, getGraph(unit[i]), stack, payload[i])\n    }\n  } else {\n    pushFirstHeapItem('pure', page, getGraph(unit), stack, payload)\n  }\n  if (upsert && alreadyStarted) return\n  exec()\n}\n\n/** try catch for external functions */\nconst tryRun = (local: Local, {fn}, stack: Stack) => {\n  try {\n    return fn(getValue(stack), local.scope, stack)\n  } catch (err) {\n    console.error(err)\n    local.fail = true\n  }\n}\n","//@flow\n\nimport {StateRef} from './index.h'\nimport {nextStepID} from './id'\n\nexport const createStateRef = (current: any): StateRef => ({\n  id: nextStepID(),\n  current,\n})\nexport const readRef = ({current}: StateRef | {current: any}) => current\n","//@flow\n\nexport const callStackAReg = (stack, {fn}, {a}) => fn(stack, a)\nexport const callARegStack = (stack, {fn}, {a}) => fn(a, stack)\nexport const callStack = (stack, {fn}) => fn(stack)\n","//@flow\n\nimport {Graphite} from './index.h'\nimport {getGraph, getOwners, getLinks} from './getter'\n\nexport const own = (ownerUnit: Graphite, links: Graphite[]) => {\n  const owner = getGraph(ownerUnit)\n  for (let i = 0; i < links.length; i++) {\n    const link = getGraph(links[i])\n    if (owner.family.type !== 'domain') link.family.type = 'crosslink'\n    getOwners(link).push(owner)\n    getLinks(owner).push(link)\n  }\n}\n","//@flow\n\nimport {getConfig, getNestedConfig} from './getter'\n\nexport const onConfigNesting = (\n  rawConfig,\n  fn: (babelData: any, userConfig: any) => void,\n) => {\n  if (getNestedConfig(rawConfig)) {\n    fn(getConfig(rawConfig), getNestedConfig(rawConfig))\n  }\n}\n","//@flow\n\nimport {Graph, Graphite} from './index.h'\nimport {getGraph, getOwners, getLinks, getSubscribers} from './getter'\nimport {is} from './is'\n\nconst removeItem = (list, item) => {\n  const pos = list.indexOf(item)\n  if (pos !== -1) {\n    list.splice(pos, 1)\n  }\n}\nconst removeFromNode = (currentNode, targetNode) => {\n  removeItem(currentNode.next, targetNode)\n  removeItem(getOwners(currentNode), targetNode)\n  removeItem(getLinks(currentNode), targetNode)\n}\nconst clearNodeNormalized = (\n  targetNode: Graph,\n  deep: boolean,\n  isDomainUnit,\n) => {\n  targetNode.next.length = 0\n  targetNode.seq.length = 0\n  //$off\n  targetNode.scope = null\n  let currentNode\n  let list = getLinks(targetNode)\n  while ((currentNode = list.pop())) {\n    removeFromNode(currentNode, targetNode)\n    if (\n      deep ||\n      (isDomainUnit && !targetNode.meta.sample) ||\n      currentNode.family.type === 'crosslink'\n    ) {\n      clearNodeNormalized(currentNode, deep, isDomainUnit)\n    }\n  }\n  list = getOwners(targetNode)\n  while ((currentNode = list.pop())) {\n    removeFromNode(currentNode, targetNode)\n    if (isDomainUnit && currentNode.family.type === 'crosslink') {\n      clearNodeNormalized(currentNode, deep, isDomainUnit)\n    }\n  }\n}\nconst clearMap = (map: any) => map.clear()\nexport const clearNode = (\n  graphite: Graphite,\n  {\n    deep,\n  }: {\n    deep?: boolean,\n  } = {},\n) => {\n  let isDomainUnit = false\n  if (graphite.ownerSet) graphite.ownerSet.delete(graphite)\n  if (is.store(graphite)) {\n    clearMap(getSubscribers(graphite))\n  } else if (is.domain(graphite)) {\n    isDomainUnit = true\n    const history = graphite.history\n    clearMap(history.events)\n    clearMap(history.effects)\n    clearMap(history.stores)\n    clearMap(history.domains)\n  }\n  clearNodeNormalized(getGraph(graphite), !!deep, isDomainUnit)\n}\n","//@flow\n\nimport {Subscription, Graphite} from './index.h'\nimport {bind2} from './bind'\nimport {clearNode} from './clearNode'\n\nexport const createSubscription = (node: Graphite): Subscription => {\n  const result = bind2(clearNode, node, undefined)\n  result.unsubscribe = result\n  return result\n}\n","//@flow\nimport {onConfigNesting} from './config'\nimport {createNode} from './createNode'\nimport {Subscription, Graphite, Cmd} from './index.h'\nimport {createSubscription} from './subscription'\nimport {throwError} from './throw'\nimport {addToRegion} from './region'\n\nexport const createLinkNode = (\n  parent: Graphite,\n  child: Graphite,\n  {\n    node,\n    scope,\n    meta,\n  }: {\n    node?: Array<Cmd | false | void | null>,\n    scope?: {[name: string]: any},\n    meta?: {[name: string]: any},\n  },\n) =>\n  addToRegion(\n    createNode({\n      node,\n      parent,\n      child,\n      scope,\n      meta,\n      family: {\n        owners: [parent, child],\n        links: child,\n      },\n    }),\n  )\nexport const forward = (opts: {\n  from: Graphite | Graphite[],\n  to: Graphite | Graphite[],\n  meta?: Object,\n}): Subscription => {\n  let config\n  onConfigNesting(opts, (injectedData, userConfig) => {\n    config = injectedData\n    opts = userConfig\n  })\n  const {from, to, meta = {op: 'forward'}} = opts\n  if (!from || !to) throwError('from and to fields should be defined')\n  if (config) meta.config = config\n  return createSubscription(\n    addToRegion(\n      createNode({\n        parent: from,\n        child: to,\n        meta,\n        family: {},\n      }),\n    ),\n  )\n}\n","//@flow\n\nimport {step} from './typedef'\nimport {callStack} from './caller'\nimport {createNode} from './createNode'\nimport {Subscription, Unit} from './index.h'\nimport {createSubscription} from './subscription'\nimport {addToRegion} from './region'\n\nexport const watchUnit = (\n  unit: Unit,\n  handler: (payload: any) => any,\n): Subscription =>\n  createSubscription(\n    addToRegion(\n      createNode({\n        scope: {fn: handler},\n        node: [step.run({fn: callStack})],\n        parent: unit,\n        meta: {op: 'watch'},\n        family: {\n          owners: unit,\n        },\n      }),\n    ),\n  )\n","//@flow\n\nexport const forIn = (obj, cb: (value: any, key: string) => void) => {\n  for (const key in obj) {\n    cb(obj[key], key)\n  }\n}\n","//@flow\n\nimport {step} from './typedef'\nimport {readRef} from './stateRef'\n\n//prettier-ignore\nexport const filterChanged = step.filter({\n  fn: (data, {state}) => (\n    data !== undefined &&\n    data !== readRef(state)\n  ),\n})\n\nexport const noop = step.compute({\n  fn: n => n,\n})\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import {Store, Event, launch, createEvent} from 'effector'\n\nimport {\n  DOMElement,\n  ElementDraft,\n  MergedBindings,\n  NSType,\n  PropertyMap,\n  StoreOrData,\n  DOMProperty,\n  StylePropertyMap,\n  ListItemType,\n  UsingDraft,\n  Actor,\n  ListType,\n  Leaf,\n  BindingsDraft,\n  LeafMountParams,\n  LeafData,\n  LeafDataElement,\n  LeafDataRoute,\n  RouteType,\n  Template,\n  Spawn,\n  TreeType,\n  TreeItemType,\n} from './index.h'\n\nimport {\n  ElementBlock,\n  ListBlock,\n  TextBlock,\n  TreeBlock,\n  UsingBlock,\n  FF,\n  FE,\n  FL,\n  FT,\n  LF,\n  RouteBlock,\n  Block,\n  FragmentBlock,\n  RF,\n  FR,\n  RecItemBlock,\n  RecBlock,\n} from './relation.h'\n\nimport {createOpGroup, createOp} from './plan'\n\nimport {spawn} from './template'\nimport {findParentDOMElement, findPreviousVisibleSibling} from './search'\n\nexport function mountChildTemplates(\n  draft: BindingsDraft,\n  {\n    parentBlockFragment,\n    leaf,\n    node,\n    svgRoot,\n    values,\n  }: {\n    parentBlockFragment: FragmentBlock\n    leaf: Leaf\n    node: DOMElement\n    svgRoot?: SVGSVGElement | null\n    values?: {[name: string]: any}\n  },\n) {\n  draft.childTemplates.forEach(actor => {\n    mountChild({\n      parentBlockFragment,\n      leaf,\n      node,\n      svgRoot,\n      values,\n      actor,\n    })\n  })\n}\n\nexport function mountChild({\n  parentBlockFragment,\n  leaf,\n  node,\n  actor,\n  svgRoot,\n  values,\n}: {\n  parentBlockFragment: FragmentBlock\n  leaf: Leaf\n  node: DOMElement\n  actor: Actor<any>\n  svgRoot?: SVGSVGElement | null\n  values?: {[name: string]: any}\n}) {\n  let leafData: LeafData\n  const {draft} = actor\n  const {queue} = leaf.ops.group\n  const opGroup = createOpGroup(queue)\n  const parentDomSubtree = leaf.ops.domSubtree\n  let domSubtree = parentDomSubtree\n  switch (draft.type) {\n    case 'route': {\n      const routeBlock: RouteBlock = {\n        type: 'route',\n        parent: {\n          type: 'FR',\n          parent: parentBlockFragment,\n          child: null as any,\n          visible: true,\n          index: draft.inParentIndex,\n        },\n        child: {\n          type: 'RF',\n          parent: null as any,\n          child: {\n            type: 'fragment',\n            parent: null as any,\n            child: [],\n          },\n          visible: false,\n        },\n      }\n      routeBlock.parent.child = routeBlock\n      routeBlock.child.parent = routeBlock\n      routeBlock.child.child.parent = routeBlock.child\n      parentBlockFragment.child[draft.inParentIndex] = routeBlock.parent\n      leafData = {\n        type: 'route',\n        block: routeBlock,\n        ops: {\n          // visible:\n        },\n        initialized: false,\n      }\n      break\n    }\n    case 'element': {\n      const elementBlock: ElementBlock = {\n        type: 'element',\n        parent: {\n          type: 'FE',\n          parent: parentBlockFragment,\n          child: null as any,\n          visible: false,\n          index: draft.inParentIndex,\n        },\n        child: {\n          type: 'EF',\n          parent: null as any,\n          child: {\n            type: 'fragment',\n            parent: null as any,\n            child: [],\n          },\n        },\n        value: draft.stencil.cloneNode() as DOMElement,\n      }\n      elementBlock.parent.child = elementBlock\n      elementBlock.child.parent = elementBlock\n      elementBlock.child.child.parent = elementBlock.child\n      parentBlockFragment.child[draft.inParentIndex] = elementBlock.parent\n      leafData = {\n        type: 'element',\n        block: elementBlock,\n        ops: {\n          visible: createOp({\n            value: false,\n            priority: 'tree',\n            runOp(value) {\n              if (leaf.hydration) {\n                // console.count('hydration')\n              }\n              if (value) {\n                appendChild(elementBlock)\n                if ((leafData as any).needToCallNode) {\n                  ;(leafData as any).needToCallNode = false\n                  launch({\n                    target: onMount,\n                    params: {\n                      element: elementBlock.value,\n                      fns: draft.node,\n                    },\n                    page: childSpawn.spawn,\n                  })\n                }\n              } else {\n                elementBlock.value.remove()\n                elementBlock.parent.visible = false\n              }\n            },\n            group: parentDomSubtree,\n          }),\n        },\n        needToCallNode: draft.node.length > 0,\n      }\n      domSubtree = createOpGroup(queue)\n      break\n    }\n    case 'list': {\n      const listBlock: ListBlock = {\n        type: 'list',\n        parent: {\n          type: 'FL',\n          parent: parentBlockFragment,\n          child: null as any,\n          visible: true,\n          index: draft.inParentIndex,\n        },\n        child: [],\n        lastChild: null,\n      }\n      listBlock.parent.child = listBlock\n      parentBlockFragment.child[draft.inParentIndex] = listBlock.parent\n      leafData = {\n        type: 'list',\n        draft,\n        block: listBlock,\n      }\n      break\n    }\n    case 'tree': {\n      const treeBlock: TreeBlock = {\n        type: 'tree',\n        parent: {\n          type: 'FTree',\n          parent: parentBlockFragment,\n          child: null as any,\n          visible: true,\n          index: draft.inParentIndex,\n        },\n        child: {\n          type: 'fragment',\n          parent: null as any,\n          child: [],\n        },\n      }\n      treeBlock.parent.child = treeBlock\n      treeBlock.child.parent = treeBlock\n      parentBlockFragment.child[draft.inParentIndex] = treeBlock.parent\n      leafData = {\n        type: 'tree',\n        block: treeBlock,\n      }\n      break\n    }\n    case 'using':\n    case 'listItem':\n      break\n    case 'rec': {\n      const recBlock: RecBlock = {\n        type: 'rec',\n        parent: {\n          type: 'FRec',\n          parent: parentBlockFragment,\n          child: null as any,\n          visible: true,\n          index: draft.inParentIndex,\n        },\n        child: {\n          type: 'RecF',\n          parent: null as any,\n          child: {\n            type: 'fragment',\n            parent: null as any,\n            child: [],\n          },\n        },\n      }\n      recBlock.parent.child = recBlock\n      recBlock.child.parent = recBlock\n      recBlock.child.child.parent = recBlock.child\n      parentBlockFragment.child[draft.inParentIndex] = recBlock.parent\n      leafData = {\n        type: 'rec',\n        block: recBlock,\n      }\n      break\n    }\n    case 'recItem': {\n      const recItemBlock: RecItemBlock = {\n        type: 'recItem',\n        parent: {\n          type: 'FRecItem',\n          parent: parentBlockFragment,\n          child: null as any,\n          visible: true,\n          index: draft.inParentIndex,\n        },\n        child: {\n          type: 'RecItemF',\n          parent: null as any,\n          child: {\n            type: 'fragment',\n            parent: null as any,\n            child: [],\n          },\n        },\n      }\n      recItemBlock.parent.child = recItemBlock\n      recItemBlock.child.parent = recItemBlock\n      recItemBlock.child.child.parent = recItemBlock.child\n      parentBlockFragment.child[draft.inParentIndex] = recItemBlock.parent\n      leafData = {\n        type: 'rec item',\n        block: recItemBlock,\n      }\n      break\n    }\n    default: {\n      //@ts-ignore\n      console.warn(`unexpected draft type ${draft.type}`)\n    }\n  }\n  const childSpawn = spawn(actor, {\n    values,\n    parentLeaf: leaf,\n    mountNode: node,\n    svgRoot: svgRoot ? svgRoot : leaf.svgRoot,\n    //@ts-ignore\n    leafData,\n    opGroup,\n    domSubtree,\n    hydration: leaf.hydration,\n  })\n}\n\nexport function appendChild(block: TextBlock | ElementBlock) {\n  const visibleSibling = findPreviousVisibleSibling(block)\n  if (visibleSibling) {\n    visibleSibling.after(block.value)\n  } else {\n    findParentDOMElement(block)!.prepend(block.value)\n  }\n  block.parent.visible = true\n}\n\nexport const onMount = createEvent<{\n  fns: Array<(node: DOMElement) => (() => void) | void>\n  element: DOMElement\n}>()\n\nonMount.watch(({fns, element}) => {\n  fns.forEach(fn => {\n    fn(element)\n  })\n})\n","import {StoreOrData, DOMProperty} from './index.h'\nimport {spec} from './elementHook'\n\ntype Word = StoreOrData<DOMProperty> | StoreOrData<string> | StoreOrData<number>\n\nexport function text(x: TemplateStringsArray, ...args: Array<Word>) {\n  const words: Array<Word> = [x[0]]\n  for (let i = 0; i < args.length; i++) {\n    words.push(args[i], x[i + 1])\n  }\n  spec({text: words as any})\n}\n","import {USE_PERF} from './env'\n\nexport let beginMark: (label: string) => void\nexport let endMark: (label: string) => void\nif (USE_PERF && typeof performance !== 'undefined' && performance.mark) {\n  beginMark = label => {\n    performance.mark('☄️ ' + label + ' start')\n  }\n  endMark = label => {\n    try {\n      performance.measure('☄️ ' + label, '☄️ ' + label + ' start')\n    } catch (err) {} // Clear marks immediately to avoid growing buffer.\n\n    performance.clearMarks('☄️ ' + label + ' start')\n    performance.clearMeasures('☄️ ' + label)\n  }\n} else {\n  beginMark = label => {}\n  endMark = label => {}\n}\n","export let now: () => number\n\nif (typeof performance !== 'undefined' && performance.now) {\n  now = () => performance.now()\n} else if (typeof process !== 'undefined' && process.hrtime) {\n  now = () => {\n    const hr = process.hrtime()\n    return (hr[0] * 1e9 + hr[1]) / 1e6\n  }\n} else {\n  now = () => Date.now()\n}\n","import {TASK_DEADLINE} from './platform/env'\nimport {now} from './platform/now'\nimport {beginMark, endMark} from './platform/mark'\nimport {raf} from './platform/raf'\nimport {Op, OpPriorityQueue, OpGroup, AsyncValue} from './index.h'\n\ntype Linkable = {\n  cursor: {\n    prev: Linkable | null\n    next: Linkable | null\n  }\n}\n\nfunction addItemToQueue(\n  queue: {first: Linkable | null; last: Linkable | null},\n  item: Linkable,\n) {\n  if (queue.last) {\n    item.cursor.prev = queue.last\n    queue.last.cursor.next = item\n    queue.last = item\n  } else {\n    queue.first = queue.last = item\n  }\n}\n\nfunction removeItemFromQueue(\n  queue: {first: Linkable | null; last: Linkable | null},\n  item: Linkable,\n) {\n  if (item.cursor.prev) {\n    item.cursor.prev.cursor.next = item.cursor.next\n  }\n  if (item.cursor.next) {\n    item.cursor.next.cursor.prev = item.cursor.prev\n  }\n  if (queue.last === item) {\n    queue.last = item.cursor.prev\n  }\n  if (queue.first === item) {\n    queue.first = item.cursor.next\n  }\n  item.cursor.prev = null\n  item.cursor.next = null\n}\n\n//prettier-ignore\nfunction removeOpGroupFromQueue(\n  group: OpGroup,\n  priority: 'props' | 'tree' | 'data'\n) {\n  if (group.cursor[priority].prev) {\n    group.cursor[priority].prev!.cursor[priority].next = group.cursor[priority].next\n  }\n  if (group.cursor[priority].next) {\n    group.cursor[priority].next!.cursor[priority].prev = group.cursor[priority].prev\n  }\n  if (group.queue[priority].last === group) {\n    group.queue[priority].last = group.cursor[priority].prev\n  }\n  if (group.queue[priority].first === group) {\n    group.queue[priority].first = group.cursor[priority].next\n  }\n  group.cursor[priority].prev = null\n  group.cursor[priority].next = null\n}\n\nfunction removeOpFromQueue(op: Op) {\n  op.status = 'active'\n  removeItemFromQueue(getOpQueue(op), op)\n}\n\nfunction addOpGroupToQueue(\n  group: OpGroup,\n  priority: 'props' | 'tree' | 'data',\n) {\n  if (group.queue[priority].last) {\n    group.cursor[priority].prev = group.queue[priority].last\n    group.queue[priority].last!.cursor[priority].next = group\n    group.queue[priority].last = group\n  } else {\n    group.queue[priority].first = group.queue[priority].last = group\n  }\n}\n\nfunction getOpQueue(op: Op) {\n  return op.group.activeChilds[op.priority]\n}\n\nexport function forceSetOpValue(value: any, op: Op) {\n  op.value.active = op.value.pending = value\n  if (op.status === 'active') return\n  removeOpFromQueue(op)\n}\n\nexport function pushOpToQueue(value: any, op: Op) {\n  if (op.value.active === value) {\n    op.value.pending = value\n    if (op.status === 'pending') {\n      removeOpFromQueue(op)\n      if (!getOpQueue(op).first) {\n        removeOpGroupFromQueue(op.group, op.priority)\n      }\n    }\n    return\n  }\n  if (op.status === 'active') {\n    op.status = 'pending'\n    if (!getOpQueue(op).first) {\n      addOpGroupToQueue(op.group, op.priority)\n    }\n    addItemToQueue(getOpQueue(op), op)\n  }\n  op.value.pending = value\n  if (!op.group.queue.rafID) {\n    op.group.queue.rafID = raf(op.group.queue.execQueue)\n  }\n}\n\nfunction execQueue(queue: OpPriorityQueue) {\n  beginMark('execQueue')\n  const start = now()\n  let interrupted = false\n  let group: OpGroup | null\n  let op: Op | null\n\n  quant: {\n    while (queue.props.first || queue.tree.first || queue.data.first) {\n      if (now() - start >= TASK_DEADLINE) {\n        interrupted = true\n        break quant\n      }\n      const hasPropsTasks = !!queue.props.first\n      if (hasPropsTasks) beginMark('props')\n\n      while ((group = queue.props.first)) {\n        while ((op = group.activeChilds.props.first)) {\n          if (now() - start >= TASK_DEADLINE) {\n            interrupted = true\n            endMark('props')\n            break quant\n          }\n          op.runOp(op.value.pending)\n          op.value.active = op.value.pending\n          removeOpFromQueue(op)\n        }\n        removeOpGroupFromQueue(group, 'props')\n      }\n      if (hasPropsTasks) endMark('props')\n\n      const hasTreeTasks = !!queue.tree.first\n      if (hasTreeTasks) beginMark('tree')\n\n      while ((group = queue.tree.first)) {\n        while ((op = group.activeChilds.tree.first)) {\n          if (now() - start >= TASK_DEADLINE) {\n            interrupted = true\n            endMark('tree')\n            break quant\n          }\n          op.runOp(op.value.pending)\n          op.value.active = op.value.pending\n          removeOpFromQueue(op)\n        }\n        removeOpGroupFromQueue(group, 'tree')\n      }\n      if (hasTreeTasks) endMark('tree')\n\n      const hasDataTasks = !!queue.data.first\n      if (hasDataTasks) beginMark('data')\n\n      while ((group = queue.data.first)) {\n        while ((op = group.activeChilds.data.first)) {\n          if (now() - start >= TASK_DEADLINE) {\n            interrupted = true\n            endMark('data')\n            break quant\n          }\n          op.runOp(op.value.pending)\n          op.value.active = op.value.pending\n          removeOpFromQueue(op)\n        }\n        removeOpGroupFromQueue(group, 'data')\n      }\n      if (hasDataTasks) endMark('data')\n    }\n  }\n  endMark('execQueue')\n  if (interrupted) {\n    queue.rafID = raf(queue.execQueue)\n  } else {\n    queue.rafID = null\n    if (queue.onDrain) {\n      const rs = queue.onDrain\n      queue.onDrain = null\n      rs()\n    }\n  }\n}\n\nexport function createOp({\n  value,\n  runOp,\n  group,\n  priority,\n}: {\n  value: any\n  runOp: (value: any) => void\n  group: OpGroup\n  priority: 'props' | 'tree' | 'data'\n}): Op {\n  return {\n    value: {\n      active: value,\n      pending: value,\n    },\n    runOp,\n    status: 'active',\n    priority,\n    group,\n    cursor: {\n      prev: null,\n      next: null,\n    },\n  }\n}\n\nexport function createOpQueue({\n  onComplete,\n}: {\n  onComplete?: () => void\n}): OpPriorityQueue {\n  const queue: OpPriorityQueue = {\n    props: {\n      first: null,\n      last: null,\n    },\n    tree: {\n      first: null,\n      last: null,\n    },\n    data: {\n      first: null,\n      last: null,\n    },\n    rafID: null,\n    execQueue() {},\n    onDrain: onComplete,\n  }\n  queue.execQueue = execQueue.bind(null, queue)\n  return queue\n}\n\nexport function createOpGroup(queue: OpPriorityQueue): OpGroup {\n  return {\n    ops: [],\n    queue,\n    activeChilds: {\n      props: {\n        first: null,\n        last: null,\n      },\n      tree: {\n        first: null,\n        last: null,\n      },\n      data: {\n        first: null,\n        last: null,\n      },\n    },\n    cursor: {\n      props: {\n        prev: null,\n        next: null,\n      },\n      tree: {\n        prev: null,\n        next: null,\n      },\n      data: {\n        prev: null,\n        next: null,\n      },\n    },\n  }\n}\n\nexport function createAsyncValue({\n  value,\n  group,\n  onInit,\n  onChange,\n  onTerminate,\n}: {\n  value: any\n  group: OpGroup\n  onInit: (value: any) => void\n  onChange: (value: any) => void\n  onTerminate: (wasActive: boolean) => void\n}): AsyncValue {\n  const change = createOp({\n    value,\n    group,\n    runOp(value) {\n      item.status = 'A'\n      onChange(value)\n    },\n    priority: 'data',\n  })\n  const item: AsyncValue = {\n    status: 'IA',\n    value: change.value,\n    hooks: {\n      onTerminate,\n    },\n    ops: {\n      init: createOp({\n        value: false,\n        group,\n        runOp(value) {\n          item.status = 'A'\n          onInit(item.value.active)\n        },\n        priority: 'data',\n      }),\n      change,\n      terminate: createOp({\n        value: false,\n        group,\n        runOp(value) {\n          item.status = 'T'\n          item.hooks.onTerminate(true)\n        },\n        priority: 'data',\n      }),\n    },\n  }\n  pushOpToQueue(true, item.ops.init)\n  return item\n}\n\nexport function stopAsyncValue(item: AsyncValue) {\n  switch (item.status) {\n    case 'I':\n    case 'T':\n    case 'AT':\n      return\n    case 'A':\n      item.status = 'AT'\n      pushOpToQueue(true, item.ops.terminate)\n      break\n    case 'AA':\n      item.status = 'AT'\n      pushOpToQueue(true, item.ops.terminate)\n      pushOpToQueue(item.value.active, item.ops.change)\n      break\n    case 'IA':\n      item.status = 'T'\n      pushOpToQueue(false, item.ops.init)\n      item.hooks.onTerminate(false)\n      break\n  }\n}\n\nexport function updateAsyncValue(value: any, item: AsyncValue) {\n  switch (item.status) {\n    case 'I':\n    case 'T':\n      return\n    case 'A':\n      if (item.value.active !== value) {\n        item.status = 'AA'\n        pushOpToQueue(value, item.ops.change)\n      }\n      break\n    case 'AA':\n      if (item.value.active === value) {\n        item.status = 'A'\n        pushOpToQueue(value, item.ops.change)\n      } else if (item.value.pending !== value) {\n        item.value.pending = value\n      }\n      break\n    case 'IA':\n      item.value.active = item.value.pending = value\n      break\n    case 'AT':\n      // item.status = item.value.active === value ? 'A' : 'AA'\n      // pushOpToQueue(value, item.ops.change)\n      // pushOpToQueue(false, item.ops.terminate)\n      break\n  }\n}\n","export const USE_PERF = true\n\nexport const TASK_DEADLINE = 10\n","import {DOMElement} from './index.h'\n\nexport function isFalse(val: any) {\n  return (\n    val !== '' &&\n    val !== 0 &&\n    val !== '0' &&\n    (val === false || val === undefined || val === null)\n  )\n}\n\nexport function applyStyleVar(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    element.style.removeProperty(`--${field}`)\n  } else {\n    element.style.setProperty(`--${field}`, `${value}`)\n  }\n}\n\nexport function applyStyle(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    delete element.style[field as any]\n  } else {\n    element.style[field as any] = `${value}`\n  }\n}\n\nexport function applyDataAttr(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    delete element.dataset[field]\n  } else {\n    element.dataset[field] = `${value}`\n  }\n}\nexport function applyAttr(\n  element: DOMElement,\n  field: string,\n  value: string | number | boolean | null,\n) {\n  if (isFalse(value)) {\n    switch (field) {\n      case 'value':\n        //@ts-ignore\n        delete element.value\n        break\n      case 'checked':\n        //@ts-ignore\n        element.checked = false\n        break\n      case 'spellcheck':\n        if (value === false) {\n          element.setAttribute('spellcheck', 'false')\n          return\n        }\n        break\n    }\n    element.removeAttribute(field)\n  } else {\n    switch (field) {\n      case 'value':\n        //@ts-ignore\n        element.value = `${value}`\n        break\n      case 'checked':\n        //@ts-ignore\n        element.checked = `${value}`\n        break\n    }\n    element.setAttribute(field, `${value}`)\n  }\n}\n\nexport function applyText(textNode: Text, text: string | number | boolean) {\n  textNode.replaceData(0, (textNode.textContent || '').length, String(text))\n}\n","import {\n  Store,\n  Event,\n  launch,\n  step,\n  createNode,\n  withRegion,\n  restore,\n  Step,\n  createEvent,\n} from 'effector'\nimport {\n  Leaf,\n  Actor,\n  ElementDraft,\n  ListType,\n  ListItemType,\n  UsingDraft,\n  RouteType,\n  NSType,\n  DOMElement,\n  LeafData,\n  OpGroup,\n  Template,\n  Spawn,\n  TreeType,\n  TreeItemType,\n  LeafMountParams,\n  NodeDraft,\n} from './index.h'\n\nlet templateID = 0\nlet spawnID = 0\nexport let currentTemplate: Template | null = null\nexport let currentLeaf: Leaf | null = null\nexport let currentActor: Actor<any> | null = null\n\nexport function createTemplate<Api extends {[method: string]: any}>(config: {\n  fn: (\n    state: {\n      [field: string]: Store<any>\n    },\n    triggers: {\n      mount: Event<LeafMountParams>\n      unmount: Event<void>\n    },\n  ) => {[K in keyof Api]: Event<Api[K]>}\n  state?: {[field: string]: any}\n  defer?: boolean\n  name: string\n  isSvgRoot: boolean\n  draft: NodeDraft\n  namespace: NSType\n  env: {\n    document: Document\n  }\n}): Actor<Api>\n//@ts-ignore\nexport function createTemplate(config: {\n  fn: (\n    state: {\n      [field: string]: Store<any>\n    },\n    triggers: {\n      mount: Event<LeafMountParams>\n      unmount: Event<void>\n    },\n  ) => void\n  state?: {[field: string]: any}\n  defer?: boolean\n  name: string\n  isSvgRoot: boolean\n  draft: NodeDraft\n  namespace: NSType\n  env: {\n    document: Document\n  }\n}): Actor<any>\nexport function createTemplate<Api extends {[method: string]: any}>({\n  fn,\n  state: values = {},\n  defer = false,\n  name = '',\n  draft,\n  isSvgRoot,\n  namespace,\n  env,\n}: {\n  fn: (\n    state: {\n      [field: string]: Store<any>\n    },\n    triggers: {\n      mount: Event<LeafMountParams>\n      unmount: Event<void>\n    },\n  ) => {[K in keyof Api]: Event<Api[K]>}\n  state?: {[field: string]: any}\n  defer?: boolean\n  name: string\n  isSvgRoot: boolean\n  draft: NodeDraft\n  namespace: NSType\n  env: {\n    document: Document\n  }\n}): Actor<Api> {\n  const parentActor = currentActor\n  const parent = currentTemplate\n  const template: Template = {\n    id: ++templateID,\n    name,\n    plain: [],\n    watch: [],\n    nameMap: {},\n    pages: [],\n    closure: [],\n    childTemplates: [],\n    upward: step.filter({\n      //@ts-ignore\n      fn(upd, scope, stack) {\n        if (!stack.page) {\n          console.error('context lost', stack)\n          return false\n        }\n        if (!stack.page.active) return false\n        const stackTemplates = [stack.page.template]\n        const stackPages = [stack.page]\n        {\n          let currentStackPage = stack.page.parent\n          while (currentStackPage) {\n            stackPages.push(currentStackPage)\n            stackTemplates.push(currentStackPage.template)\n            currentStackPage = currentStackPage.parent\n          }\n        }\n        stack.node.next.forEach((node: Step) => {\n          const targetTemplate = node.meta.nativeTemplate\n          if (targetTemplate) {\n            if (stackTemplates.includes(targetTemplate)) {\n              launch({\n                target: node,\n                params: upd,\n                defer: true,\n                page: stackPages[stackTemplates.indexOf(targetTemplate)],\n                //@ts-ignore\n                stack,\n              })\n            } else {\n              console.error('context drift', {stack, node})\n            }\n          } else {\n            launch({\n              target: node,\n              params: upd,\n              defer: true,\n              page: null,\n              //@ts-ignore\n              stack,\n            })\n          }\n        })\n        return false\n      },\n    }),\n    loader: step.filter({\n      //@ts-ignore\n      fn(upd, scope, stack) {\n        if (stack.parent) {\n          if (stack.page) {\n            if (!stack.page.active) return false\n            if (stack.page.template === template) return true\n            if (stack.page.childSpawns[template.id]) {\n              stack.page.childSpawns[template.id].forEach((page: Spawn) => {\n                launch({\n                  params: upd,\n                  target: stack.node,\n                  page,\n                  defer: true,\n                })\n              })\n            } else {\n              if (scope.targetTemplate) {\n                const stackPages = [stack.page]\n                {\n                  let currentStackPage = stack.page.parent\n                  while (currentStackPage) {\n                    stackPages.push(currentStackPage)\n                    currentStackPage = currentStackPage.parent\n                  }\n                }\n                const targetPageIndex = stackPages.findIndex(\n                  stackPage => scope.targetTemplate === stackPage.template,\n                )\n                if (targetPageIndex === -1) {\n                  launch({\n                    params: upd,\n                    target: stack.node,\n                    page: null,\n                    defer: true,\n                  })\n                } else {\n                  launch({\n                    params: upd,\n                    target: stack.node,\n                    page: stackPages[targetPageIndex],\n                    defer: true,\n                  })\n                }\n              } else {\n                template.pages.forEach(page => {\n                  if (page.fullID.startsWith(stack.page.fullID)) {\n                    launch({\n                      params: upd,\n                      target: stack.node,\n                      page,\n                      defer: true,\n                    })\n                  } else {\n                    // console.count('no page match')\n                  }\n                })\n              }\n            }\n          } else {\n            template.pages.forEach(page => {\n              launch({\n                params: upd,\n                target: stack.node,\n                page,\n                defer: true,\n              })\n            })\n          }\n\n          return false\n        }\n        return true\n      },\n    }),\n    parent,\n  }\n  if (parent) {\n    parent.childTemplates.push(template)\n  }\n  const node = createNode({\n    meta: {\n      template,\n    },\n  })\n  currentTemplate = template\n  const actor: Actor<Api> = (currentActor = {\n    template,\n    node,\n    api: null as any,\n    trigger: {\n      mount: createEvent<LeafMountParams>(),\n      unmount: createEvent(),\n    },\n    draft,\n    isSvgRoot,\n    namespace,\n    env,\n  })\n  if (!defer) {\n    withRegion(node, () => {\n      const state = restore(values)\n      actor.api = fn(state, actor.trigger) as any\n      template.nameMap = state\n    })\n  } else {\n    actor.deferredInit = () => {\n      const prevActor = currentActor\n      const prevTemplate = currentTemplate\n      currentActor = actor\n      currentTemplate = template\n      actor.deferredInit = null\n      try {\n        withRegion(node, () => {\n          const state = restore(values)\n          actor.api = fn(state, actor.trigger) as any\n          template.nameMap = state\n        })\n      } finally {\n        currentActor = prevActor\n        currentTemplate = prevTemplate\n      }\n    }\n  }\n  currentActor = parentActor\n  currentTemplate = parent\n  //@ts-ignore\n  template.actor = actor\n  return actor\n}\n\nfunction getCurrent(ref: {type?: string; current: any}) {\n  switch (ref.type) {\n    case 'list':\n      return [...ref.current]\n    case 'shape':\n      return {...ref.current}\n    default:\n      return ref.current\n  }\n}\n\nexport function spawn(\n  actor: Actor<any>,\n  {\n    values = {},\n    parentLeaf,\n    mountNode,\n    svgRoot,\n    leafData,\n    opGroup,\n    domSubtree,\n    hydration,\n  }: {\n    values?: {[field: string]: any}\n    parentLeaf: Leaf | null\n    mountNode: DOMElement\n    svgRoot: SVGSVGElement | null\n    leafData: LeafData\n    opGroup: OpGroup\n    domSubtree: OpGroup\n    hydration: boolean\n  },\n): Leaf {\n  const parentSpawn = parentLeaf ? parentLeaf.spawn : null\n  const template = actor.template\n  const page = {} as Record<string, any>\n  const result: Spawn = {\n    id: ++spawnID,\n    fullID: '',\n    reg: page,\n    template,\n    parent: parentSpawn,\n    childSpawns: {},\n    active: true,\n  }\n  template.pages.push(result)\n  const api = {} as any\n  const leaf: Leaf = {\n    spawn: result,\n    api,\n    draft: actor.draft,\n    ops: {\n      group: opGroup,\n      domSubtree,\n    },\n    svgRoot,\n    data: leafData,\n    parentLeaf,\n    hydration,\n  }\n  const previousSpawn = currentLeaf\n  currentLeaf = leaf\n  if (parentSpawn) {\n    if (!parentSpawn.childSpawns[template.id]) {\n      parentSpawn.childSpawns[template.id] = []\n    }\n    parentSpawn.childSpawns[template.id].push(result)\n  }\n  if (parentSpawn) {\n    result.fullID = `${parentSpawn.fullID}_${result.id}`\n  } else {\n    result.fullID = `${result.id}`\n  }\n  if (parentSpawn) {\n    Object.assign(page, parentSpawn.reg)\n  }\n  for (const ref of template.closure) {\n    let closureRef = ref\n    let parent = result.parent\n    findClosure: while (parent) {\n      if (ref.id in parent.reg) {\n        closureRef = parent.reg[ref.id]\n        break findClosure\n      }\n      parent = parent.parent\n    }\n    page[ref.id] = closureRef\n  }\n\n  for (const ref of template.plain) {\n    const next = {\n      id: ref.id,\n      current: getCurrent(ref),\n    }\n    page[ref.id] = next\n  }\n  for (const name in values) {\n    const id = template.nameMap[name].stateRef.id\n    page[id] = {\n      id,\n      current: values[name],\n    }\n  }\n  function execRef(ref: any) {\n    if (ref.before) {\n      for (const cmd of ref.before) {\n        switch (cmd.type) {\n          case 'map': {\n            const from = cmd.from\n            if (!page[from.id]) {\n              page[from.id] = from\n            }\n            page[ref.id].current = cmd.fn(page[from.id].current)\n            break\n          }\n          case 'field': {\n            const from = cmd.from\n            if (!page[from.id]) {\n              page[from.id] = from\n            }\n            page[ref.id].current[cmd.field] = page[from.id].current\n            break\n          }\n          case 'closure':\n            if (!page[cmd.of.id]) {\n              page[cmd.of.id] = cmd.of\n            }\n            break\n        }\n      }\n    }\n    if (!ref.after) return\n    const value = page[ref.id].current\n    for (const cmd of ref.after) {\n      const to = cmd.to\n      if (!page[to.id]) {\n        page[to.id] = {\n          id: to.id,\n          current: to.current,\n        }\n      }\n      switch (cmd.type) {\n        case 'copy':\n          page[to.id].current = value\n          break\n        case 'map':\n          page[to.id].current = cmd.fn(value)\n          break\n      }\n    }\n  }\n  for (const ref of template.closure) {\n    execRef(ref)\n  }\n  for (const ref of template.plain) {\n    execRef(ref)\n  }\n\n  function runWatchersFrom(\n    list: any[],\n    state: {i: number; stop: boolean},\n    page: Record<string, any>,\n  ) {\n    state.stop = true\n    let val\n    try {\n      while (state.i < list.length) {\n        val = list[state.i]\n        state.i++\n        val.fn(page[val.of.id].current)\n      }\n    } catch (err) {\n      console.error(err)\n      state.stop = false\n    }\n  }\n  const state = {i: 0, stop: false}\n  while (!state.stop) {\n    runWatchersFrom(template.watch, state, page)\n  }\n  if (parentSpawn) {\n    for (const id in result.childSpawns) {\n      if (!(id in parentSpawn.childSpawns)) {\n        parentSpawn.childSpawns[id] = []\n      }\n      parentSpawn.childSpawns[id].push(...result.childSpawns[id])\n    }\n  }\n  api.mount = (params: any, defer = true) =>\n    launch({\n      target: actor.trigger.mount,\n      params,\n      defer,\n      page: result,\n    })\n  api.unmount = (params: any, defer = true) =>\n    launch({\n      target: actor.trigger.unmount,\n      params,\n      defer,\n      page: result,\n    })\n  if (actor.api) {\n    for (const key in actor.api) {\n      api[key] = (params: any, defer = true) =>\n        launch({\n          target: actor.api[key],\n          params,\n          defer,\n          page: result,\n        })\n    }\n  }\n  //@ts-ignore\n  leaf.spawn.api = api\n  //@ts-ignore\n  leaf.spawn.leaf = leaf\n  leaf.api.mount({\n    node: mountNode,\n    leaf,\n  })\n  currentLeaf = previousSpawn\n  return leaf\n}\n","import {DOMElement} from './index.h'\n\nimport {\n  ElementBlock,\n  TextBlock,\n  UsingBlock,\n  FF,\n  FE,\n  FL,\n  FT,\n  LF,\n  Block,\n  RF,\n  RecItemF,\n  FRecItem,\n  FR,\n  FTree,\n  FragmentBlock,\n  FRec,\n} from './relation.h'\n\nfunction findParentDOMElementBlock(\n  block: Exclude<Block, UsingBlock>,\n): UsingBlock | ElementBlock {\n  switch (block.type) {\n    case 'fragment':\n      switch (block.parent.type) {\n        case 'EF':\n        case 'UF':\n          return block.parent.parent\n        case 'tree':\n          return findParentDOMElementBlock(block.parent.parent.parent)\n      }\n      return findParentDOMElementBlock(block.parent.parent)\n    case 'route':\n      return findParentDOMElementBlock(block.parent.parent)\n    default:\n      return findParentDOMElementBlock(block.parent.parent)\n  }\n}\nexport function findParentDOMElement(\n  block: Exclude<Block, UsingBlock>,\n): DOMElement | null {\n  const child = findParentDOMElementBlock(block)\n  if (child) return child.value\n  return null\n}\nfunction findLastVisibleChildBlock(\n  block: FF | FE | FL | FT | FR | LF | RF | FTree | FRecItem | FRec,\n): ElementBlock | TextBlock | null {\n  if (!block.visible) return null\n  switch (block.type) {\n    case 'FE':\n    case 'FT':\n      return block.child\n    case 'FR':\n      return findLastVisibleChildBlock(block.child.child)\n    case 'LF':\n    case 'RF':\n    case 'FF':\n      return findLastVisibleFragmentChild(block.child)\n    case 'FTree':\n      return findLastVisibleFragmentChild(block.child.child)\n    case 'FRec':\n    case 'FRecItem':\n      return findLastVisibleFragmentChild(block.child.child.child)\n    case 'FL': {\n      let child = block.child.lastChild\n      if (!child) return null\n      while (child) {\n        const visibleChild = findLastVisibleChildBlock(child)\n        if (visibleChild) return visibleChild\n        child = child.left\n      }\n      return null\n    }\n    default: {\n      const _: never = block\n      return null\n    }\n  }\n}\nfunction findLastVisibleFragmentChild(fragment: FragmentBlock) {\n  const childs = fragment.child\n  for (let i = childs.length - 1; i >= 0; i--) {\n    const child = childs[i]\n    const visibleChild = findLastVisibleChildBlock(child)\n    if (visibleChild) return visibleChild\n  }\n  return null\n}\nexport function findPreviousVisibleSiblingBlock(\n  block: Exclude<Block, UsingBlock>,\n): TextBlock | ElementBlock | null {\n  if (block.type === 'fragment') {\n    switch (block.parent.type) {\n      case 'EF':\n      case 'UF':\n        return null\n      case 'RecF':\n      case 'RecItemF':\n      case 'RF': {\n        const parent = block.parent.parent.parent\n        const parentFragment = parent.parent\n        for (let i = parent.index - 1; i >= 0; i--) {\n          const sibling = parentFragment.child[i]\n          const visibleChild = findLastVisibleChildBlock(sibling)\n          if (visibleChild) return visibleChild\n        }\n        return findPreviousVisibleSiblingBlock(parentFragment)\n      }\n      case 'FF': {\n        const parent = block.parent\n        const parentFragment = parent.parent\n        for (let i = parent.index - 1; i >= 0; i--) {\n          const sibling = parentFragment.child[i]\n          const visibleChild = findLastVisibleChildBlock(sibling)\n          if (visibleChild) return visibleChild\n        }\n        return findPreviousVisibleSiblingBlock(parentFragment)\n      }\n      case 'LF': {\n        let sibling = block.parent.left\n        while (sibling) {\n          const visibleChild = findLastVisibleChildBlock(sibling)\n          if (visibleChild) return visibleChild\n          sibling = sibling.left\n        }\n        return findPreviousVisibleSiblingBlock(block.parent.parent)\n      }\n      case 'tree': {\n        const parent = block.parent.parent\n        const parentFragment = parent.parent\n        for (let i = parent.index - 1; i >= 0; i--) {\n          const sibling = parentFragment.child[i]\n          const visibleChild = findLastVisibleChildBlock(sibling)\n          if (visibleChild) return visibleChild\n        }\n        return findPreviousVisibleSiblingBlock(parentFragment)\n      }\n      default: {\n        const _: never = block.parent\n        return null\n      }\n    }\n  }\n  if (block.type === 'route') {\n    const parentFragment = block.parent.parent\n    for (let i = block.parent.index - 1; i >= 0; i--) {\n      const sibling = parentFragment.child[i]\n      if (!sibling) continue\n      const visibleChild = findLastVisibleChildBlock(sibling)\n      if (visibleChild) return visibleChild\n    }\n    return findPreviousVisibleSiblingBlock(parentFragment)\n  }\n  const parentFragment = block.parent.parent\n  for (let i = block.parent.index - 1; i >= 0; i--) {\n    const sibling = parentFragment.child[i]\n    if (!sibling) continue\n    const visibleChild = findLastVisibleChildBlock(sibling)\n    if (visibleChild) return visibleChild\n  }\n  return findPreviousVisibleSiblingBlock(parentFragment)\n}\n\nexport function findPreviousVisibleSibling(\n  block: Exclude<Block, UsingBlock>,\n): DOMElement | Text | null {\n  const child = findPreviousVisibleSiblingBlock(block)\n  if (child) return child.value\n  return null\n}\n","import {Store} from 'effector'\n\nexport function remap<T extends {[field: string]: any}, S extends keyof T>(\n  store: Store<T>,\n  key: S,\n): Store<T[S]>\nexport function remap<\n  T extends {[field: string]: any},\n  S extends {[field: number]: keyof T} | {[field: string]: keyof T}\n>(\n  store: Store<T>,\n  shape: S,\n): {[K in keyof S]: S[K] extends keyof T ? Store<T[S[K]]> : never}\n\nexport function remap(\n  store: Store<any>,\n  shape: string | Array<any> | {[field: string]: any},\n) {\n  if (Array.isArray(shape)) {\n    return shape.map(key => store.map(value => value[key]))\n  }\n  if (typeof shape === 'object' && shape !== null) {\n    const result = {} as any\n    for (const key in shape) {\n      const projectedKey = shape[key]\n      result[key] = store.map(\n        typeof projectedKey === 'function'\n          ? value => projectedKey(value)\n          : value => value[projectedKey],\n      )\n    }\n    return result\n  }\n  return store.map(value => value[shape])\n}\n","import {\n  Store,\n  Event,\n  is,\n  launch,\n  createStore,\n  createEvent,\n  sample,\n  merge,\n  restore,\n} from 'effector'\n\nimport {\n  DOMElement,\n  ElementDraft,\n  MergedBindings,\n  NSType,\n  PropertyMap,\n  StoreOrData,\n  DOMProperty,\n  StylePropertyMap,\n  ListItemType,\n  UsingDraft,\n  Actor,\n  ListType,\n  Leaf,\n  BindingsDraft,\n  LeafMountParams,\n  LeafData,\n  LeafDataElement,\n  LeafDataRoute,\n  RouteType,\n  Template,\n  Spawn,\n  TreeType,\n  TreeItemType,\n  LeafDataTree,\n  RecItemDraft,\n  LeafDataRecItem,\n  RecDraft,\n  LeafDataRec,\n} from './index.h'\nimport {beginMark, endMark} from './platform/mark'\n\nimport {\n  ElementBlock,\n  ListBlock,\n  TextBlock,\n  UsingBlock,\n  FF,\n  FE,\n  FL,\n  FT,\n  LF,\n  RouteBlock,\n  Block,\n  FragmentBlock,\n  RF,\n  FR,\n  FRec,\n} from './relation.h'\n\nimport {\n  pushOpToQueue,\n  forceSetOpValue,\n  createOpGroup,\n  createOp,\n  createAsyncValue,\n  stopAsyncValue,\n  updateAsyncValue,\n  createOpQueue,\n} from './plan'\n\nimport {\n  applyStyle,\n  applyStyleVar,\n  applyDataAttr,\n  applyAttr,\n  applyText,\n} from './bindings'\nimport {\n  createTemplate,\n  spawn,\n  currentActor,\n  currentTemplate,\n  currentLeaf,\n} from './template'\nimport {\n  findParentDOMElement,\n  findPreviousVisibleSibling,\n  findPreviousVisibleSiblingBlock,\n} from './search'\nimport {\n  mountChild,\n  appendChild,\n  onMount as onMountSync,\n  mountChildTemplates,\n} from './mountChild'\nimport {remap} from './remap'\n\nexport function h(tag: string): void\nexport function h(tag: string, cb: () => void): void\nexport function h(\n  tag: string,\n  spec: {\n    fn?: () => void\n    attr?: PropertyMap\n    data?: PropertyMap\n    text?: StoreOrData<DOMProperty> | Array<StoreOrData<DOMProperty>>\n    visible?: Store<boolean>\n    style?: StylePropertyMap\n    styleVar?: PropertyMap\n    handler?:\n      | {\n          config?: {\n            passive?: boolean\n            capture?: boolean\n            prevent?: boolean\n            stop?: boolean\n          }\n          on: Partial<\n            {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n          >\n        }\n      | Partial<\n          {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n        >\n  },\n): void\nexport function h(tag: string, opts?: any) {\n  let hasCb = false\n  let hasOpts = false\n  let cb: () => void\n  if (typeof opts === 'function') {\n    hasCb = true\n    cb = opts\n  } else {\n    if (opts) {\n      hasOpts = true\n      if (opts.fn) {\n        hasCb = true\n        cb = opts.fn\n      }\n      if (opts.ɔ) {\n        if (typeof opts.ɔ === 'function') {\n          hasCb = true\n          cb = opts.ɔ\n        } else if (typeof opts.ɔ.fn === 'function') {\n          hasCb = true\n          cb = opts.ɔ.fn\n        }\n      }\n    }\n  }\n  const env = currentActor!.env\n  const parentNS = currentActor!.namespace\n  let ns: NSType = parentNS\n  let type = 'html'\n  ns = type = parentNS === 'svg' ? 'svg' : 'html'\n  if (tag === 'svg') {\n    type = 'svg'\n    ns = 'svg'\n  }\n  const node =\n    type === 'svg'\n      ? env.document.createElementNS('http://www.w3.org/2000/svg', tag)\n      : env.document.createElement(tag)\n  if (parentNS === 'foreignObject') {\n    node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml')\n    ns = 'html'\n  } else if (tag === 'svg') {\n    node.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n    ns = 'svg'\n  } else if (tag === 'foreignObject') {\n    ns = 'foreignObject'\n  }\n  const stencil = node as DOMElement\n  const draft: ElementDraft = {\n    type: 'element',\n    tag,\n    attr: [],\n    data: [],\n    text: [],\n    styleProp: [],\n    styleVar: [],\n    handler: [],\n    stencil,\n    seq: [],\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: -1,\n    opsAmount: 1,\n    node: [],\n  }\n  const elementTemplate = createTemplate({\n    name: 'element',\n    draft,\n    isSvgRoot: tag === 'svg',\n    namespace: ns,\n    fn(_, {mount, unmount}) {\n      const domElementCreated = createEvent<Leaf>()\n      function valueElementMutualSample(value: Store<DOMProperty>) {\n        return mutualSample({\n          mount: domElementCreated,\n          state: value,\n          onMount: (value, leaf) => ({leaf, value}),\n          onState: (leaf, value) => ({leaf, value}),\n        })\n      }\n      const leaf = mount.map(({leaf}) => leaf)\n      if (hasCb) {\n        cb()\n      }\n      if (hasOpts) {\n        spec(opts)\n      }\n      const merged: MergedBindings = {\n        attr: {},\n        data: {},\n        text: draft.text,\n        styleProp: {},\n        styleVar: {},\n        visible: draft.visible || null,\n        handler: draft.handler,\n      }\n      for (let i = 0; i < draft.attr.length; i++) {\n        const map = draft.attr[i]\n        for (const key in map) {\n          if (key === 'xlink:href') {\n            merged.attr.href = map[key]\n          } else {\n            merged.attr[key] = map[key]\n          }\n        }\n      }\n      for (let i = 0; i < draft.data.length; i++) {\n        const map = draft.data[i]\n        for (const key in map) {\n          merged.data[key] = map[key]\n        }\n      }\n      for (let i = 0; i < draft.styleProp.length; i++) {\n        const map = draft.styleProp[i]\n        for (const key in map) {\n          if (key.startsWith('--')) {\n            merged.styleVar[key.slice(2)] = map[key]!\n          } else {\n            merged.styleProp[key] = map[key]\n          }\n        }\n      }\n      for (let i = 0; i < draft.styleVar.length; i++) {\n        const map = draft.styleVar[i]\n        for (const key in map) {\n          merged.styleVar[key] = map[key]\n        }\n      }\n      if (merged.visible) {\n        draft.seq.push({\n          type: 'visible',\n          value: merged.visible,\n        })\n      }\n      for (const attr in merged.attr) {\n        const value = merged.attr[attr]\n        if (is.unit(value)) {\n          draft.seq.push({\n            type: 'attr',\n            field: attr,\n            value,\n          })\n        } else {\n          applyAttr(stencil, attr, value)\n        }\n      }\n      for (const data in merged.data) {\n        const value = merged.data[data]\n        if (is.unit(value)) {\n          draft.seq.push({\n            type: 'data',\n            field: data,\n            value,\n          })\n        } else {\n          applyDataAttr(stencil, data, value)\n        }\n      }\n      for (const propName in merged.styleProp) {\n        const value = merged.styleProp[propName]\n        if (is.unit(value)) {\n          draft.seq.push({\n            type: 'style',\n            field: propName,\n            value,\n          })\n        } else {\n          applyStyle(stencil, propName, value!)\n        }\n      }\n      for (const field in merged.styleVar) {\n        const value = merged.styleVar[field]\n        if (is.unit(value)) {\n          draft.seq.push({\n            type: 'styleVar',\n            field,\n            value,\n          })\n        } else {\n          applyStyleVar(stencil, field, value)\n        }\n      }\n      for (let i = 0; i < merged.text.length; i++) {\n        const item = merged.text[i]\n        if (item.value === null) continue\n        if (is.unit(item.value)) {\n          draft.seq.push({\n            type: 'dynamicText',\n            value: item.value,\n            childIndex: item.index,\n          })\n          //@ts-ignore\n          const ref = item.value.stateRef\n          const templ: Template = currentTemplate!\n          if (!templ.plain.includes(ref) && !templ.closure.includes(ref)) {\n            templ.closure.push(ref)\n          }\n        } else {\n          draft.seq.push({\n            type: 'staticText',\n            value: String(item.value),\n            childIndex: item.index,\n          })\n        }\n      }\n      for (let i = 0; i < merged.handler.length; i++) {\n        const item = merged.handler[i]\n        for (const key in item.map) {\n          draft.seq.push({\n            type: 'handler',\n            for: key,\n            //@ts-ignore\n            handler: item.map[key],\n            options: item.options,\n            domConfig: item.domConfig,\n          })\n        }\n      }\n      if (merged.visible) {\n        const {onMount, onState} = mutualSample({\n          mount: leaf,\n          state: merged.visible,\n          onMount: (value, leaf) => ({leaf, value, hydration: leaf.hydration}),\n          onState: (leaf, value) => ({leaf, value, hydration: false}),\n          greedy: true,\n        })\n        onMount.watch(({leaf, value, hydration}) => {\n          const leafData = leaf.data as LeafDataElement\n          const visibleOp = leafData.ops.visible\n          const parentBlock = leafData.block\n          if (hydration) {\n            forceSetOpValue(value, visibleOp)\n            if (value) {\n              const visibleSibling = findPreviousVisibleSibling(parentBlock)\n              let foundElement: DOMElement\n              if (visibleSibling) {\n                foundElement = visibleSibling.nextSibling! as DOMElement\n              } else {\n                foundElement = findParentDOMElement(parentBlock)!\n                  .firstChild! as DOMElement\n              }\n              if (foundElement.nodeName === '#text') {\n                const emptyText = foundElement\n                foundElement = foundElement.nextSibling! as DOMElement\n                emptyText.remove()\n              }\n              parentBlock.value = foundElement\n              parentBlock.parent.visible = true\n            }\n          }\n          const svgRoot = elementTemplate.isSvgRoot\n            ? (parentBlock.value as any)\n            : null\n          mountChildTemplates(draft, {\n            parentBlockFragment: parentBlock.child.child,\n            leaf,\n            node: parentBlock.value,\n            svgRoot,\n          })\n          if (value) {\n            if (leafData.needToCallNode) {\n              leafData.needToCallNode = false\n              launch({\n                target: onMountSync,\n                params: {\n                  element: leafData.block.value,\n                  fns: draft.node,\n                },\n                page: leaf.spawn,\n                defer: true,\n              })\n            }\n          }\n          launch({\n            target: domElementCreated,\n            params: leaf,\n            defer: true,\n            page: leaf.spawn,\n          })\n        })\n        merge([onState, onMount]).watch(({leaf, value, hydration}) => {\n          const leafData = leaf.data as LeafDataElement\n          const visibleOp = leafData.ops.visible\n          if (!hydration) {\n            pushOpToQueue(value, visibleOp)\n          }\n        })\n      }\n      for (let i = 0; i < draft.seq.length; i++) {\n        const item = draft.seq[i]\n        switch (item.type) {\n          case 'visible':\n            break\n          case 'attr': {\n            const {field} = item\n            const immediate =\n              field === 'value' ||\n              field === 'checked' ||\n              field === 'min' ||\n              field === 'max'\n            const {onMount, onState} = valueElementMutualSample(item.value)\n            if (immediate) {\n              merge([onState, onMount]).watch(({leaf, value}) => {\n                applyAttr(readElement(leaf), field, value)\n              })\n            } else {\n              const opID = draft.opsAmount++\n              onMount.watch(({value, leaf}) => {\n                const element = readElement(leaf)\n                const op = createOp({\n                  value,\n                  priority: 'props',\n                  runOp(value) {\n                    applyAttr(element, field, value)\n                  },\n                  group: leaf.ops.group,\n                })\n                leaf.ops.group.ops[opID] = op\n                applyAttr(element, field, value)\n              })\n              onState.watch(({value, leaf}) => {\n                pushOpToQueue(value, leaf.ops.group.ops[opID])\n              })\n            }\n            break\n          }\n          case 'data': {\n            const {field} = item\n            const {onMount, onState} = valueElementMutualSample(item.value)\n            const opID = draft.opsAmount++\n            onMount.watch(({value, leaf}) => {\n              const element = readElement(leaf)\n              const op = createOp({\n                value,\n                priority: 'props',\n                runOp(value) {\n                  applyDataAttr(element, field, value)\n                },\n                group: leaf.ops.group,\n              })\n              leaf.ops.group.ops[opID] = op\n              applyDataAttr(element, field, value)\n            })\n            onState.watch(({value, leaf}) => {\n              pushOpToQueue(value, leaf.ops.group.ops[opID])\n            })\n            break\n          }\n          case 'style': {\n            const opID = draft.opsAmount++\n            const {field} = item\n            const {onMount, onState} = valueElementMutualSample(item.value)\n\n            onMount.watch(({value, leaf}) => {\n              const element = readElement(leaf)\n              const op = createOp({\n                value,\n                priority: 'props',\n                runOp(value) {\n                  applyStyle(element, field, value)\n                },\n                group: leaf.ops.group,\n              })\n              leaf.ops.group.ops[opID] = op\n              applyStyle(element, field, value)\n            })\n            onState.watch(({value, leaf}) => {\n              pushOpToQueue(value, leaf.ops.group.ops[opID])\n            })\n            break\n          }\n          case 'styleVar': {\n            const {field} = item\n            const {onMount, onState} = valueElementMutualSample(item.value)\n            const opID = draft.opsAmount++\n            onMount.watch(({value, leaf}) => {\n              const element = readElement(leaf)\n              const op = createOp({\n                value,\n                priority: 'props',\n                runOp(value) {\n                  applyStyleVar(element, field, value)\n                },\n                group: leaf.ops.group,\n              })\n              leaf.ops.group.ops[opID] = op\n              applyStyleVar(element, field, value)\n            })\n            onState.watch(({value, leaf}) => {\n              pushOpToQueue(value, leaf.ops.group.ops[opID])\n            })\n            break\n          }\n          case 'staticText': {\n            domElementCreated\n              .map(e => e)\n              .watch(leaf => {\n                installTextNode(leaf, item.value, item.childIndex)\n              })\n            break\n          }\n          case 'dynamicText': {\n            const opID = draft.opsAmount++\n            const textAndElement = sample({\n              source: item.value,\n              clock: domElementCreated,\n              fn: (text, leaf) => ({value: String(text), leaf}),\n              greedy: true,\n            })\n            textAndElement.watch(({value, leaf}) => {\n              const op = createOp({\n                value,\n                priority: 'props',\n                runOp(value) {\n                  applyText(textBlock.value, value)\n                },\n                group: leaf.ops.group,\n              })\n              leaf.ops.group.ops[opID] = op\n              const textBlock = installTextNode(leaf, value, item.childIndex)\n            })\n            sample({\n              source: domElementCreated,\n              clock: item.value,\n              fn: (leaf, text) => ({leaf, text}),\n            }).watch(({leaf, text}) => {\n              pushOpToQueue(text, leaf.ops.group.ops[opID])\n            })\n            break\n          }\n          case 'handler': {\n            const nativeTemplate: Template | null =\n              //@ts-ignore\n              item.handler.graphite.meta.nativeTemplate || null\n            domElementCreated.watch(leaf => {\n              let page: Spawn | null = null\n              if (nativeTemplate) {\n                let nativePageFound = false\n                let currentPage: Spawn | null = leaf.spawn\n                while (!nativePageFound && currentPage) {\n                  if (currentPage.template === nativeTemplate) {\n                    nativePageFound = true\n                    page = currentPage\n                  } else {\n                    currentPage = currentPage.parent\n                  }\n                }\n              }\n              readElement(leaf).addEventListener(\n                item.for,\n                value => {\n                  if (item.options.prevent) value.preventDefault()\n                  if (item.options.stop) value.stopPropagation()\n                  launch({\n                    target: item.handler,\n                    params: value,\n                    page,\n                  })\n                },\n                item.domConfig,\n              )\n            })\n            break\n          }\n        }\n      }\n      sample(leaf, unmount).watch(leaf => {\n        const {spawn} = leaf\n        removeItem(spawn, spawn.parent!.childSpawns[spawn.template.id])\n        function halt(spawn: Spawn) {\n          spawn.active = false\n          removeItem(spawn, spawn.template.pages)\n          for (const id in spawn.childSpawns) {\n            spawn.childSpawns[id].forEach(halt)\n          }\n        }\n        halt(spawn)\n\n        const visibleOp = (leaf.data as LeafDataElement).ops.visible\n        pushOpToQueue(false, visibleOp)\n      })\n      mount.watch(({leaf}) => {\n        const leafData = leaf.data as LeafDataElement\n\n        if (!draft.visible) {\n          const visibleOp = leafData.ops.visible\n          const parentBlock = leafData.block\n          if (leaf.hydration) {\n            forceSetOpValue(true, visibleOp)\n            const visibleSibling = findPreviousVisibleSibling(parentBlock)\n            let foundElement: DOMElement\n            if (visibleSibling) {\n              foundElement = visibleSibling.nextSibling! as DOMElement\n            } else {\n              foundElement = findParentDOMElement(parentBlock)!\n                .firstChild! as DOMElement\n            }\n            if (foundElement.nodeName === '#text') {\n              const emptyText = foundElement\n              foundElement = foundElement.nextSibling! as DOMElement\n              emptyText.remove()\n            }\n            parentBlock.value = foundElement\n            parentBlock.parent.visible = true\n          }\n          const svgRoot = elementTemplate.isSvgRoot\n            ? (parentBlock.value as any)\n            : null\n          mountChildTemplates(draft, {\n            parentBlockFragment: parentBlock.child.child,\n            leaf,\n            node: parentBlock.value,\n            svgRoot,\n          })\n          launch({\n            target: domElementCreated,\n            params: leaf,\n            defer: true,\n            page: leaf.spawn,\n          })\n          if (leaf.hydration) {\n            if (leafData.needToCallNode) {\n              leafData.needToCallNode = false\n              launch({\n                target: onMountSync,\n                params: {\n                  element: leafData.block.value,\n                  fns: draft.node,\n                },\n                page: leaf.spawn,\n                defer: true,\n              })\n            }\n          } else {\n            pushOpToQueue(true, visibleOp)\n          }\n        }\n      })\n    },\n    env,\n  })\n  setInParentIndex(elementTemplate)\n  function readElement(leaf: Leaf) {\n    return (leaf.data as LeafDataElement).block.value\n  }\n  function installTextNode(leaf: Leaf, value: string, childIndex: number) {\n    const parentBlock = (leaf.data as any).block as ElementBlock\n    const parentBlockFragment = parentBlock.child.child\n    const textBlock: TextBlock = {\n      type: 'text',\n      parent: {\n        type: 'FT',\n        parent: parentBlockFragment,\n        child: null as any,\n        visible: false,\n        index: childIndex,\n      },\n      value: null as any,\n    }\n    textBlock.parent.child = textBlock\n    parentBlockFragment.child[childIndex] = textBlock.parent\n    if (leaf.hydration) {\n      const siblingBlock = findPreviousVisibleSiblingBlock(textBlock)\n      if (siblingBlock) {\n        switch (siblingBlock.type) {\n          case 'text': {\n            textBlock.value = env.document.createTextNode(value)\n            siblingBlock.value.after(textBlock.value)\n            break\n          }\n          case 'element': {\n            textBlock.value = siblingBlock.value.nextSibling! as Text\n            applyText(textBlock.value, value)\n            break\n          }\n        }\n      } else {\n        const parentElement = findParentDOMElement(textBlock)\n        textBlock.value = parentElement!.firstChild! as Text\n        applyText(textBlock.value, value)\n      }\n      textBlock.parent.visible = true\n    } else {\n      textBlock.value = env.document.createTextNode(value)\n      appendChild(textBlock)\n    }\n    return textBlock\n  }\n}\n\nfunction getDefaultEnv(): {\n  document: Document\n} {\n  if (typeof document !== 'undefined') return {document}\n  throw Error('your environment has no document')\n}\n\nexport function using(node: DOMElement, cb: () => any): void\nexport function using(\n  node: DOMElement,\n  opts: {\n    fn: () => void\n    hydrate?: boolean\n    env?: {\n      document: Document\n    }\n    onComplete?: () => void\n    onRoot?: (config: {template: Actor<{mount: any}>; leaf: Leaf}) => void\n  },\n): void\nexport function using(node: DOMElement, opts: any): void {\n  let cb: () => any\n  let onComplete: (() => void) | undefined\n  let env: {\n    document: Document\n  }\n  let hydrate: boolean\n  let onRoot:\n    | ((config: {template: Actor<{mount: any}>; leaf: Leaf}) => void)\n    | undefined\n  if (typeof opts === 'function') {\n    cb = opts\n    env = getDefaultEnv()\n    hydrate = false\n  } else {\n    cb = opts.fn\n    env = opts.env ? opts.env : getDefaultEnv()\n    hydrate = opts.hydrate\n    onComplete = opts.onComplete\n    onRoot = opts.onRoot\n  }\n  const namespaceURI = node.namespaceURI\n  const tag = node.tagName.toLowerCase()\n  const ns: NSType =\n    namespaceURI === 'http://www.w3.org/2000/svg'\n      ? 'svg'\n      : tag === 'foreignobject'\n      ? 'foreignObject'\n      : 'html'\n  const draft: UsingDraft = {\n    type: 'using',\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: -1,\n  }\n\n  const usingTemplate = createTemplate({\n    name: 'using',\n    draft: draft as any,\n    isSvgRoot: tag === 'svg',\n    namespace: ns,\n    fn(_, {mount}) {\n      cb()\n      mount.watch(({node, leaf}) => {\n        const parentBlock = (leaf.data as any).block as UsingBlock\n        mountChildTemplates(draft, {\n          parentBlockFragment: parentBlock.child.child,\n          leaf,\n          node,\n        })\n      })\n    },\n    env,\n  })\n\n  const usingBlock: UsingBlock = {\n    type: 'using',\n    child: {\n      type: 'UF',\n      parent: null as any,\n      child: {\n        type: 'fragment',\n        parent: null as any,\n        child: [],\n      },\n    },\n    value: node,\n  }\n  usingBlock.child.parent = usingBlock\n  usingBlock.child.child.parent = usingBlock.child\n\n  const queue = createOpQueue({onComplete})\n  const rootLeaf = spawn(usingTemplate, {\n    parentLeaf: currentLeaf || null,\n    mountNode: node,\n    svgRoot: usingTemplate.isSvgRoot\n      ? (node as any)\n      : currentLeaf\n      ? currentLeaf.svgRoot\n      : null,\n    leafData: {\n      type: 'using',\n      draft,\n      element: node,\n      block: usingBlock,\n    },\n    opGroup: createOpGroup(queue),\n    domSubtree: createOpGroup(queue),\n    hydration: hydrate,\n  })\n\n  if (onRoot) {\n    onRoot({\n      template: usingTemplate,\n      leaf: rootLeaf,\n    })\n  }\n}\n\nexport function node(cb: (node: DOMElement) => (() => void) | void) {\n  const draft = currentActor!.draft\n  switch (draft.type) {\n    case 'list':\n    case 'listItem':\n    case 'using':\n    case 'route':\n    case 'tree':\n    case 'treeItem':\n    case 'rec':\n    case 'recItem':\n      return\n  }\n  draft.node.push(cb)\n}\n\nexport function spec(config: {\n  attr?: PropertyMap\n  data?: PropertyMap\n  text?: StoreOrData<DOMProperty> | Array<StoreOrData<DOMProperty>>\n  style?: StylePropertyMap\n  styleVar?: PropertyMap\n  visible?: Store<boolean>\n  handler?:\n    | {\n        config?: {\n          passive?: boolean\n          capture?: boolean\n          prevent?: boolean\n          stop?: boolean\n        }\n        on: Partial<\n          {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n        >\n      }\n    | Partial<{[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}>\n  ɔ?: any\n}) {\n  const draft = currentActor!.draft\n  switch (draft.type) {\n    case 'list':\n      if (config.visible) draft.itemVisible = config.visible\n      return\n    case 'listItem':\n    case 'using':\n    case 'route':\n    case 'tree':\n    case 'treeItem':\n    case 'rec':\n    case 'recItem':\n      return\n  }\n  if (config.attr) draft.attr.push(config.attr)\n  if (config.data) draft.data.push(config.data)\n  if ('text' in config) {\n    const text = config.text\n    const firstIndex = draft.childCount\n    if (Array.isArray(text)) {\n      draft.text.push(\n        ...text.map((value, i) => ({\n          index: i + firstIndex,\n          value,\n        })),\n      )\n      draft.childCount += text.length\n    } else {\n      draft.text.push({\n        index: firstIndex,\n        value: text!,\n      })\n      draft.childCount += 1\n    }\n  }\n  if (config.style) draft.styleProp.push(config.style)\n  if (config.styleVar) draft.styleVar.push(config.styleVar)\n  if (config.visible) draft.visible = config.visible\n  if (config.handler) {\n    const handlerDef = config.handler as any\n    if (typeof handlerDef.on === 'object') {\n      handler(handlerDef.config || {}, handlerDef.on)\n    } else {\n      handler(handlerDef)\n    }\n  }\n  if (config.ɔ) {\n    spec(config.ɔ)\n  }\n}\n\nexport function handler(\n  map: Partial<\n    {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n  >,\n): void\nexport function handler(\n  options: {\n    passive?: boolean\n    capture?: boolean\n    prevent?: boolean\n    stop?: boolean\n  },\n  map: Partial<\n    {[K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]>}\n  >,\n): void\nexport function handler(options: any, map?: any) {\n  const draft = currentActor!.draft\n  if (draft.type !== 'element') {\n    throw Error(\n      `\"handler\" extension can be used only with element nodes, got \"${draft.type}\"`,\n    )\n  }\n  if (map === undefined) {\n    map = options\n    options = {}\n  }\n  const {\n    passive = true,\n    capture = false,\n    prevent = false,\n    stop = false,\n  } = options\n  draft.handler.push({\n    options: {\n      prevent,\n      stop,\n    },\n    domConfig: {\n      passive: prevent ? false : passive,\n      capture,\n    },\n    map,\n  })\n}\n\nexport function variant<T, K extends keyof T>({\n  source,\n  cases,\n  key,\n}: {\n  source: Store<T>\n  key: K\n  cases: T[K] extends string\n    ? Record<T[K], (config: {store: Store<T>}) => void>\n    : {\n        [caseName: string]: (config: {store: Store<T>}) => void\n        __: (config: {store: Store<T>}) => void\n      }\n}) {\n  //prettier-ignore\n  const keyReader = typeof key === 'function'\n    ? key\n    : (value: any) => String(value[key])\n  let defaultCase = false\n  for (const caseName in cases) {\n    if (caseName === '__') {\n      defaultCase = true\n      continue\n    }\n    route({\n      source,\n      visible: value => keyReader(value) === caseName,\n      fn: cases[caseName],\n    })\n  }\n  if (defaultCase) {\n    const nonDefaultCases = Object.keys(cases)\n    route({\n      source,\n      visible: value => !nonDefaultCases.includes(keyReader(value)),\n      fn: (cases as any).__,\n    })\n  }\n}\n\nexport function route<T>(config: {\n  source: Store<T>\n  visible: (value: T) => boolean\n  fn: (config: {store: Store<T>}) => void\n}): void\nexport function route<T, S extends T>(config: {\n  source: Store<T>\n  visible: (value: T) => value is S\n  fn: (config: {store: Store<S>}) => void\n}): void\nexport function route<T>({\n  source,\n  visible: visibleFn,\n  fn,\n}: {\n  source: Store<T>\n  visible: (value: T) => boolean\n  fn: (config: {store: Store<T>}) => void\n}) {\n  const draft: RouteType = {\n    type: 'route',\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: -1,\n  }\n  const routeTemplate = createTemplate({\n    name: 'route',\n    isSvgRoot: false,\n    namespace: currentActor!.namespace,\n    env: currentActor!.env,\n    draft,\n    fn(_, {mount, unmount}) {\n      const state = source.map(value => ({\n        value,\n        visible: visibleFn(value),\n      }))\n      const childDraft: RouteType = {\n        type: 'route',\n        childTemplates: [],\n        childCount: 0,\n        inParentIndex: -1,\n      }\n      const routeItemTemplate = createTemplate({\n        name: 'route item',\n        isSvgRoot: false,\n        namespace: currentActor!.namespace,\n        env: currentActor!.env,\n        draft: childDraft,\n        state: {store: null},\n        fn({store}, {mount, unmount}) {\n          const itemUpdater = createEvent<any>()\n          store.on(itemUpdater, (_, upd) => upd)\n          fn({store})\n          const onValueUpdate = sample({\n            source: mount,\n            clock: state,\n            fn: ({leaf, node}, {visible, value}) => ({\n              leaf,\n              visible,\n              node,\n              value,\n            }),\n            greedy: true,\n          })\n          mount.watch(({leaf, node}) => {\n            const data = leaf.data as LeafDataRoute\n            data.block.child.visible = true\n            mountChildTemplates(childDraft, {\n              parentBlockFragment: data.block.child.child,\n              leaf,\n              node,\n            })\n          })\n          onValueUpdate.watch(({leaf, visible, value}) => {\n            const data = leaf.data as LeafDataRoute\n            data.block.child.visible = visible\n            if (visible) {\n              launch({\n                target: itemUpdater,\n                params: value,\n                defer: true,\n                page: leaf.spawn,\n              })\n            }\n            iterateChildLeafs(leaf, child => {\n              const data = child.data\n              switch (data.type) {\n                case 'element':\n                  pushOpToQueue(visible, data.ops.visible)\n                  break\n                default:\n                  console.log('unsupported type', data.type)\n              }\n            })\n          })\n          sample(mount, unmount).watch(({leaf}) => {\n            iterateChildLeafs(leaf, child => {\n              child.api.unmount()\n            })\n            const {spawn: page} = leaf\n            page.active = false\n            removeItem(page, page.parent!.childSpawns[page.template.id])\n            removeItem(page, page.template.pages)\n          })\n        },\n      })\n      setInParentIndex(routeItemTemplate)\n      const {onMount, onState: onVisibleChange} = mutualSample({\n        mount,\n        state,\n        onMount: ({visible, value}, {leaf, node}) => ({\n          leaf,\n          visible,\n          node,\n          value,\n        }),\n        onState: ({leaf, node}, {visible, value}) => ({\n          leaf,\n          visible,\n          node,\n          value,\n        }),\n        greedy: true,\n      })\n      merge([onMount, onVisibleChange]).watch(\n        ({leaf, visible, value, node}) => {\n          const data = leaf.data as LeafDataRoute\n          data.block.child.visible = visible\n          if (visible && !data.initialized) {\n            mountChild({\n              parentBlockFragment: data.block.child.child,\n              leaf,\n              node,\n              actor: routeItemTemplate,\n              values: {store: value},\n            })\n            data.initialized = true\n          }\n        },\n      )\n      sample(mount, unmount).watch(({leaf}) => {\n        iterateChildLeafs(leaf, child => {\n          child.api.unmount()\n        })\n        const {spawn: page} = leaf\n        page.active = false\n        removeItem(page, page.parent!.childSpawns[page.template.id])\n        removeItem(page, page.template.pages)\n      })\n    },\n  })\n  setInParentIndex(routeTemplate)\n}\n\nfunction iterateChildLeafs(leaf: Leaf, cb: (child: Leaf) => void) {\n  const {spawn: page} = leaf\n  for (const key in page.childSpawns) {\n    const childs = page.childSpawns[key]\n    for (let i = 0; i < childs.length; i++) {\n      const childSpawn = childs[i]\n      //@ts-ignore\n      cb(childSpawn.leaf)\n    }\n  }\n}\n\nexport function rec<T>(\n  fn: (config: {state: Store<T>}) => void,\n): (opts: {state: Store<T>}) => void {\n  const env = currentActor!.env\n  const namespace = currentActor!.namespace\n  const recDraft: RecDraft = {\n    type: 'rec',\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: 0,\n  }\n  const recTemplate = createTemplate<{\n    itemUpdater: any\n  }>({\n    name: 'rec',\n    state: {store: null},\n    isSvgRoot: false,\n    namespace,\n    env,\n    draft: recDraft,\n    defer: true,\n    fn({store}, {mount, unmount}) {\n      fn({state: store})\n      const itemUpdater = createEvent<any>()\n      store.on(itemUpdater, (_, e) => e)\n      mount.watch(({node, leaf}) => {\n        const data = leaf.data as LeafDataRec\n        mountChildTemplates(recDraft, {\n          parentBlockFragment: data.block.child.child,\n          leaf,\n          node,\n        })\n      })\n      sample(mount, unmount).watch(({leaf}) => {\n        leaf.spawn.active = false\n        iterateChildLeafs(leaf, child => {\n          child.api.unmount()\n        })\n      })\n      return {itemUpdater}\n    },\n  })\n  return ({state}) => {\n    if (recTemplate.deferredInit) recTemplate.deferredInit()\n    // const {mount, unmount} = currentActor!.trigger\n    const {env, namespace} = currentActor!\n    const recItemDraft: RecItemDraft = {\n      type: 'recItem',\n      childTemplates: [],\n      childCount: 0,\n      inParentIndex: -1,\n    }\n    const recItemTemplate = createTemplate({\n      name: 'rec item',\n      isSvgRoot: false,\n      namespace,\n      env,\n      draft: recItemDraft,\n      fn(_, {mount, unmount}) {\n        const {onMount, onState} = mutualSample({\n          state,\n          mount,\n          onMount: (state, {leaf, node}) => ({state, leaf, node}),\n          onState: ({leaf, node}, state) => ({state, leaf, node}),\n          greedy: true,\n        })\n        sample(mount, unmount).watch(({leaf}) => {\n          leaf.spawn.active = false\n          iterateChildLeafs(leaf, child => {\n            child.api.unmount()\n          })\n        })\n        onState.watch(({state, leaf}) => {\n          iterateChildLeafs(leaf, child => {\n            child.api.itemUpdater(state)\n          })\n        })\n        onMount.watch(({node, leaf, state}) => {\n          const data = leaf.data as LeafDataRecItem\n          mountChild({\n            parentBlockFragment: data.block.child.child,\n            leaf,\n            node,\n            actor: recTemplate,\n            values: {store: state},\n          })\n        })\n      },\n    })\n    setInParentIndex(recItemTemplate)\n  }\n}\n\nexport function tree<\n  T,\n  ChildField extends keyof T\n  // KeyField extends keyof T\n>(config: {\n  source: Store<T[]>\n  // key: T[KeyField] extends string ? KeyField : never\n  child: T[ChildField] extends T[] ? ChildField : never\n  fn: (config: {store: Store<T>; child: () => void}) => void\n}): void\nexport function tree({\n  source,\n  // key: keyField,\n  child: childField,\n  fn,\n}: {\n  source: Store<any[]>\n  // key: string\n  child: string\n  fn: Function\n}) {\n  const treeRec = rec<any[]>(({state}) => {\n    list({\n      source: state,\n      fn({store}) {\n        const childList = store.map(value => value[childField] || [])\n        fn({\n          store,\n          child() {\n            treeRec({\n              state: childList,\n            })\n          },\n        })\n      },\n    })\n  })\n  treeRec({\n    state: source,\n  })\n}\n\nexport function list<T, K extends keyof T>(config: {\n  source: Store<T[]>\n  fn: (opts: {store: Store<T>; id: Store<T[K]>}) => void\n  key: T[K] extends string | number | symbol ? K : never\n}): void\nexport function list<T>(config: {\n  source: Store<T[]>\n  fn: (opts: {store: Store<T>; id: Store<number>}) => void\n}): void\nexport function list<T>(\n  source: Store<T[]>,\n  fn: (opts: {store: Store<T>; id: Store<number>}) => void,\n): void\nexport function list<T>(opts: any, maybeFn?: any) {\n  if (typeof maybeFn === 'function') {\n    if (is.unit(opts)) {\n      opts = {source: opts, fn: maybeFn}\n    } else {\n      opts.fn = maybeFn\n    }\n  }\n  const {fn: cb, key, source, fields = []} = opts\n  const getID: (item: T, i: number) => string | number | symbol =\n    key !== undefined\n      ? typeof key === 'function'\n        ? key\n        : (item: any, i: number) => item[key]\n      : (item, i) => i\n  const draft: ListType = {\n    type: 'list',\n    key: is.store(opts) ? {type: 'index'} : {type: 'key', key: opts.key},\n    childTemplates: [],\n    childCount: 0,\n    inParentIndex: -1,\n  }\n\n  const env = currentActor!.env\n  const namespace = currentActor!.namespace\n\n  const listTemplate = createTemplate({\n    name: 'list',\n    draft,\n    isSvgRoot: false,\n    namespace,\n    fn(_, {mount, unmount}) {\n      const listItemTemplate = createTemplate<{\n        itemUpdater: any\n      }>({\n        name: 'list item',\n        state: {id: -1, store: null},\n        draft,\n        isSvgRoot: false,\n        namespace,\n        fn({id, store}, {mount, unmount}) {\n          cb({store, key: id, fields: remap(store, fields)})\n          const itemUpdater = createEvent<any>()\n          store.on(itemUpdater, (_, e) => e)\n          const spawnState = createStore<{leaf: Leaf}>({\n            leaf: null as any,\n          })\n          const onRemoveFromDOM = sample(spawnState, unmount)\n          onRemoveFromDOM.watch(({leaf}) => {\n            const listItemBlock = (leaf.data as any).block as LF\n            removeItem(listItemBlock, listItemBlock.parent.child)\n            const leftBlock = listItemBlock.left\n            const rightBlock = listItemBlock.right\n            if (leftBlock) {\n              leftBlock.right = rightBlock\n              if (\n                !rightBlock &&\n                listItemBlock.parent.lastChild === listItemBlock\n              ) {\n                listItemBlock.parent.lastChild = leftBlock\n              }\n            }\n            if (rightBlock) {\n              rightBlock.left = leftBlock\n            }\n            if (\n              !leftBlock &&\n              !rightBlock &&\n              listItemBlock.parent.lastChild === listItemBlock\n            ) {\n              listItemBlock.parent.lastChild = null\n            }\n            listItemBlock.left = null\n            listItemBlock.right = null\n            iterateChildLeafs(leaf, child => {\n              child.api.unmount()\n            })\n            const {spawn: page} = leaf\n            page.active = false\n            removeItem(page, page.parent!.childSpawns[page.template.id])\n            removeItem(page, page.template.pages)\n          })\n          if (draft.itemVisible) {\n            const {\n              onMount: mountAndVisible,\n              onState: onVisibleChanges,\n            } = mutualSample({\n              mount,\n              state: draft.itemVisible,\n              onMount: (visible, {node, leaf}) => ({visible, node, leaf}),\n              onState: ({node, leaf}, visible) => ({visible, node, leaf}),\n            })\n            mountAndVisible.watch(({visible, node, leaf}) => {\n              //@ts-ignore\n              spawnState.setState({leaf})\n              const parentBlock = (leaf.data as any).block as LF\n              parentBlock.visible = visible\n              parentBlock.childInitialized = visible\n              if (visible) {\n                mountChildTemplates(draft, {\n                  parentBlockFragment: parentBlock.child,\n                  leaf,\n                  node,\n                })\n              }\n            })\n            onVisibleChanges.watch(({visible, node, leaf}) => {\n              const parentBlock = (leaf.data as any).block as LF\n              parentBlock.visible = visible\n              if (!parentBlock.childInitialized) {\n                if (visible) {\n                  parentBlock.childInitialized = true\n                  mountChildTemplates(draft, {\n                    parentBlockFragment: parentBlock.child,\n                    leaf,\n                    node,\n                  })\n                }\n                return\n              }\n              iterateChildLeafs(leaf, child => {\n                const data = child.data\n                switch (data.type) {\n                  case 'element':\n                    pushOpToQueue(visible, data.ops.visible)\n                    break\n                  default:\n                    console.log('unsupported type', data.type)\n                }\n              })\n            })\n          } else {\n            mount.watch(({node, leaf}) => {\n              //@ts-ignore\n              spawnState.setState({leaf})\n              const parentBlock = (leaf.data as any).block as LF\n              parentBlock.visible = true\n              parentBlock.childInitialized = true\n              mountChildTemplates(draft, {\n                parentBlockFragment: parentBlock.child,\n                leaf,\n                node,\n              })\n            })\n          }\n          return {\n            itemUpdater,\n          }\n        },\n        env,\n      })\n      const updates = createStore<ListItemType[]>([])\n      const mappedUpdates = source.map((x: any) => x)\n      const mountData = sample({\n        source: source as Store<T[]>,\n        clock: mount,\n        fn: (data, {node, leaf}) => {\n          return {\n            updates: data,\n            node,\n            leaf,\n            hydration: leaf.hydration,\n          }\n        },\n        greedy: true,\n      })\n\n      const parentNodeUpdateSpawn = sample({\n        source: mountData,\n        clock: mappedUpdates,\n        fn: ({node, leaf}, updates: T[]) => ({\n          updates,\n          node,\n          leaf,\n          hydration: false,\n        }),\n        greedy: true,\n      })\n      const updateTriggers = merge([mountData, parentNodeUpdateSpawn])\n      sample({\n        source: updates,\n        clock: updateTriggers,\n        greedy: true,\n        fn(records: ListItemType[], {node, updates: input, leaf, hydration}) {\n          const parentBlock = (leaf.data as any).block as ListBlock\n          beginMark('list update [' + source.shortName + ']')\n          const skipNode: boolean[] = Array(input.length).fill(false)\n          const keys = input.map(getID)\n          const resultRecords: ListItemType[] = []\n          for (let i = 0; i < records.length; i++) {\n            const record = records[i]\n            const index = keys.indexOf(record.key)\n            if (index !== -1) {\n              resultRecords.push(record)\n              skipNode[index] = true\n              updateAsyncValue(input[index], record.asyncValue)\n            } else {\n              record.active = false\n              if (record.instance) {\n                record.instance.api.unmount()\n              }\n              stopAsyncValue(record.asyncValue)\n            }\n          }\n          for (let i = 0; i < input.length; i++) {\n            if (skipNode[i]) continue\n            const value = input[i]\n            const id = keys[i]\n            const group = createOpGroup(leaf.ops.group.queue)\n            const listItemBlock: LF = {\n              type: 'LF',\n              parent: parentBlock,\n              child: {\n                type: 'fragment',\n                parent: null as any,\n                child: [],\n              },\n              childInitialized: false,\n              visible: false,\n              left: null,\n              right: null,\n            }\n            const item: ListItemType = {\n              type: 'listItem',\n              key: id as any,\n              index: id as any,\n              active: true,\n              leafData: {\n                type: 'list item',\n                block: listItemBlock,\n              },\n              asyncValue: createAsyncValue({\n                value,\n                group,\n                onTerminate(wasActive) {\n                  // if (item.instance) {\n                  //   item.instance.api.unmount()\n                  // }\n                },\n                onChange(value) {\n                  if (item.instance) {\n                    item.instance.api.itemUpdater(value)\n                  }\n                },\n                onInit(value) {\n                  if (!item.active) return\n                  if (hydration) return\n                  item.instance = spawn(listItemTemplate, {\n                    values: {\n                      id,\n                      store: value,\n                    },\n                    parentLeaf: leaf,\n                    mountNode: node,\n                    svgRoot: leaf.svgRoot,\n                    leafData: item.leafData,\n                    opGroup: group,\n                    domSubtree: leaf.ops.domSubtree,\n                    hydration,\n                  })\n                },\n              }),\n            }\n            const inParentIndex = resultRecords.length\n            resultRecords.push(item)\n            const leftSibling =\n              inParentIndex > 0\n                ? resultRecords[inParentIndex - 1].leafData\n                : null\n\n            listItemBlock.child.parent = listItemBlock\n            parentBlock.child.push(listItemBlock)\n            if (leftSibling) {\n              const leftBlock = leftSibling.block\n              listItemBlock.left = leftBlock\n              const rightBlock = leftBlock.right\n              if (rightBlock) {\n                rightBlock.left = listItemBlock\n                listItemBlock.right = rightBlock\n              } else {\n                parentBlock.lastChild = listItemBlock\n              }\n              leftBlock.right = listItemBlock\n            } else {\n              parentBlock.lastChild = listItemBlock\n            }\n            if (hydration) {\n              item.instance = spawn(listItemTemplate, {\n                values: {\n                  id,\n                  store: value,\n                },\n                parentLeaf: leaf,\n                mountNode: node,\n                svgRoot: leaf.svgRoot,\n                leafData: item.leafData,\n                opGroup: group,\n                domSubtree: leaf.ops.domSubtree,\n                hydration,\n              })\n            }\n          }\n          endMark('list update [' + source.shortName + ']')\n          if (resultRecords.length === 0) {\n            parentBlock.lastChild = null\n          }\n          return resultRecords\n        },\n        target: updates,\n      })\n      const onRemove = sample({\n        source: mount,\n        clock: sample(updates, unmount) as Event<ListItemType[]>,\n        fn: ({leaf}, records) => ({leaf, records}),\n      })\n      onRemove.watch(({leaf, records}) => {\n        for (let i = 0; i < records.length; i++) {\n          const item = records[i]\n\n          if (item.instance) {\n            item.instance.api.unmount()\n          }\n          item.active = false\n        }\n        const {spawn: page} = leaf\n        page.active = false\n        removeItem(page, page.parent!.childSpawns[page.template.id])\n        removeItem(page, page.template.pages)\n      })\n    },\n    env,\n  })\n  setInParentIndex(listTemplate)\n}\n\nfunction setInParentIndex(template: Actor<any>) {\n  if (!currentActor) return\n  const {draft} = template\n  if (draft.type === 'listItem') return\n  if (draft.type === 'rec') return\n  switch (currentActor.draft.type) {\n    case 'element':\n    case 'using':\n    case 'route':\n    case 'list':\n    case 'tree':\n    case 'treeItem':\n    case 'rec':\n    case 'recItem':\n      draft.inParentIndex = currentActor.draft.childCount\n      currentActor.draft.childCount += 1\n      currentActor.draft.childTemplates.push(template)\n      break\n    default:\n      console.warn(`unexpected currentActor type ${currentActor.draft.type}`)\n  }\n}\n\nfunction removeItem<T>(item: T, list?: T[]) {\n  if (!list) return\n  const index = list.indexOf(item)\n  if (index !== -1) {\n    list.splice(index, 1)\n  }\n}\n\nfunction mutualSample<Mount, State, T>({\n  mount,\n  state,\n  onMount,\n  onState,\n  greedy = false,\n}: {\n  mount: Event<Mount>\n  state: Store<State>\n  greedy?: boolean\n  onMount: (state: State, mount: Mount) => T\n  onState: (mount: Mount, state: State) => T\n}): {\n  onMount: Event<T>\n  onState: Event<T>\n} {\n  return {\n    onMount: sample({\n      source: state,\n      clock: mount,\n      fn: onMount,\n      greedy,\n    }),\n    onState: sample({\n      source: mount,\n      clock: state,\n      fn: onState,\n      greedy,\n    }),\n  }\n}\n","export const raf =\n  typeof requestAnimationFrame !== 'undefined'\n    ? requestAnimationFrame\n    : (cb: Function) => setTimeout(cb, 0)\n\nexport const cancelRaf: (id: number | NodeJS.Timeout) => void =\n  typeof cancelAnimationFrame !== 'undefined'\n    ? cancelAnimationFrame\n    : clearTimeout\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (!element.return)\n\t\tswitch (element.type) {\n\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length)\n\t\t\t\tbreak\n\t\t\tcase KEYFRAMES:\n\t\t\t\treturn serialize([copy(replace(element.value, '@', '@' + WEBKIT), element, '')], callback)\n\t\t\tcase RULESET:\n\t\t\t\tif (element.length)\n\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\treturn serialize([copy(replace(value, /:(read-\\w+)/, ':' + MOZ + '$1'), element, '')], callback)\n\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\tcopy(replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1'), element, ''),\n\t\t\t\t\t\t\t\t\tcopy(replace(value, /:(plac\\w+)/, ':' + MOZ + '$1'), element, ''),\n\t\t\t\t\t\t\t\t\tcopy(replace(value, /:(plac\\w+)/, MS + 'input-$1'), element, '')\n\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t})\n\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[index + 1] === 'global')\n\t\t\t\t\t\t\t\tchildren[index + 1] = '', children[index + 2] = '\\f' + substr(children[index + 2], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3)\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} value\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string} type\n * @param {string[]} props\n * @param {object[]} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {string} type\n */\nexport function copy (value, root, type) {\n\treturn node(value, root.root, root.parent, type, root.props, root.children, 0)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } / breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\treturn delimiter(type === 34 || type === 39 ? type : character)\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, trim, from, sizeof, strlen, substr, append, replace} from './Utility.js'\nimport {node, char, next, peek, caret, alloc, dealloc, delimit, whitespace, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// \" ' [ (\n\t\t\tcase 34: case 39: case 91: case 40:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0)\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, length, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import {MS, MOZ, WEBKIT} from './Enum.js'\nimport {hash, charat, strlen, indexof, replace} from './Utility.js'\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {string}\n */\nexport function prefix (value, length) {\n\tswitch (hash(value, length)) {\n\t\t// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\t\tcase 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:\n\t\t// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\t\tcase 5572: case 6356: case 5844: case 3191: case 6645: case 3005:\n\t\t// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\t\tcase 6391: case 5879: case 5623: case 6135: case 4599: case 4855:\n\t\t// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\t\tcase 4215: case 6389: case 5109: case 5365: case 5621: case 3829:\n\t\t\treturn WEBKIT + value + value\n\t\t// appearance, user-select, transform, hyphens, text-size-adjust\n\t\tcase 5349: case 4246: case 4810: case 6968: case 2756:\n\t\t\treturn WEBKIT + value + MOZ + value + MS + value + value\n\t\t// flex, flex-direction\n\t\tcase 6828: case 4268:\n\t\t\treturn WEBKIT + value + MS + value + value\n\t\t// order\n\t\tcase 6165:\n\t\t\treturn WEBKIT + value + MS + 'flex-' + value + value\n\t\t// align-items\n\t\tcase 5187:\n\t\t\treturn WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value\n\t\t// align-self\n\t\tcase 5443:\n\t\t\treturn WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value\n\t\t// align-content\n\t\tcase 4675:\n\t\t\treturn WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value\n\t\t// flex-shrink\n\t\tcase 5548:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value\n\t\t// flex-basis\n\t\tcase 5292:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value\n\t\t// flex-grow\n\t\tcase 6060:\n\t\t\treturn WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value\n\t\t// transition\n\t\tcase 4554:\n\t\t\treturn WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value\n\t\t// cursor\n\t\tcase 6187:\n\t\t\treturn replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value\n\t\t// background, background-image\n\t\tcase 5495: case 3959:\n\t\t\treturn replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1')\n\t\t// justify-content\n\t\tcase 4968:\n\t\t\treturn replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value\n\t\t// (margin|padding)-inline-(start|end)\n\t\tcase 4095: case 3583: case 4068: case 2532:\n\t\t\treturn replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value\n\t\t// (min|max)?(width|height|inline-size|block-size)\n\t\tcase 8116: case 7059: case 5753: case 5535:\n\t\tcase 5445: case 5701: case 4933: case 4677:\n\t\tcase 5533: case 5789: case 5021: case 4765:\n\t\t\t// stretch, max-content, min-content, fill-available\n\t\t\tif (strlen(value) - 1 - length > 6)\n\t\t\t\tswitch (charat(value, length + 1)) {\n\t\t\t\t\t// (m)ax-content, (m)in-content\n\t\t\t\t\tcase 109:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + '$2-$3') + value\n\t\t\t\t\t// (f)ill-available\n\t\t\t\t\tcase 102:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + '$3') + value\n\t\t\t\t\t// (s)tretch\n\t\t\t\t\tcase 115:\n\t\t\t\t\t\treturn prefix(replace(value, 'stretch', 'fill-available'), length) + value\n\t\t\t\t}\n\t\t\tbreak\n\t\t// position: sticky\n\t\tcase 4949:\n\t\t\t// (s)ticky?\n\t\t\tif (charat(value, length + 1) !== 115)\n\t\t\t\tbreak\n\t\t// display: (flex|inline-flex|inline-box)\n\t\tcase 6444:\n\t\t\tswitch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n\t\t\t\t// stic(k)y, inline-b(o)x\n\t\t\t\tcase 107: case 111:\n\t\t\t\t\treturn replace(value, value, WEBKIT + value) + value\n\t\t\t\t// (inline-)?fl(e)x\n\t\t\t\tcase 101:\n\t\t\t\t\treturn replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value\n\t\t\t}\n\t\t\tbreak\n\t\t// writing-mode\n\t\tcase 5936:\n\t\t\tswitch (charat(value, length + 11)) {\n\t\t\t\t// vertical-l(r)\n\t\t\t\tcase 114:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value\n\t\t\t\t// vertical-r(l)\n\t\t\t\tcase 108:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value\n\t\t\t\t// horizontal(-)tb\n\t\t\t\tcase 45:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value\n\t\t\t}\n\n\t\t\treturn WEBKIT + value + MS + value + value\n\t}\n\n\treturn value\n}\n","import {IMPORT, COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"forest\");","module.exports = require(\"stylis\");","module.exports = require(\"effector\");","export const domElements = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  // 'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  // 'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  // 'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'marker',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'tspan',\n] as const;\n","import { createEvent, createStore, Store, Event } from 'effector';\nimport {\n  AttributeStore,\n  DOMProperty,\n  DOMTag,\n  PropertyMap,\n  StylePropertyMap,\n  TransformMap,\n  h,\n  node,\n  spec,\n} from 'forest';\nimport { serialize, compile, stringify } from 'stylis';\n\nimport { domElements } from './elements';\n\nconst addStyle = createEvent<{ id: string; styles: string }>();\nconst $styles = createStore<{ map: Map<string, string> }>({ map: new Map() });\n\nexport function StyledRoot() {\n  const text = $styles.map(({ map }) => [...map.values()].join(' '));\n  h('style', { text });\n}\n\n$styles.on(addStyle, (state, { id, styles }) => {\n  if (state.map.has(id)) return state;\n  state.map.set(id, make(id, styles));\n  return { map: state.map };\n});\n\nfunction make(id: string, styles: string) {\n  return serialize(compile(`.es-${id} { ${styles} }`), stringify);\n}\n\nconst idCount = () => {\n  let id = 9005000;\n  return () => (++id).toString(36);\n};\n\nconst styledId = idCount();\n\ntype Cb = () => void;\n\nexport type Component = ((config: Spec | Cb) => void) & {\n  STYLED_ID: string;\n};\n\nfunction join(\n  strings: TemplateStringsArray,\n  interps: (string | Component | number)[],\n) {\n  const result = [strings[0]];\n  interps.forEach((part, index) => {\n    if (typeof part === 'function') {\n      if (typeof part.STYLED_ID === 'string') {\n        result.push(`.es-${part.STYLED_ID}`);\n      } else {\n        throw new TypeError('Passed not an effector styled component');\n      }\n    } else {\n      result.push(String(part));\n    }\n    result.push(strings[index + 1]);\n  });\n\n  return result.join('');\n}\n\nexport interface Spec {\n  attr?: PropertyMap;\n  data?: PropertyMap;\n  transform?: Partial<TransformMap>;\n  text?: DOMProperty | AttributeStore | Array<DOMProperty | AttributeStore>;\n  visible?: Store<boolean>;\n  style?: StylePropertyMap;\n  styleVar?: PropertyMap;\n  focus?: {\n    focus?: Event<unknown>;\n    blur?: Event<unknown>;\n  };\n  handler?: Partial<\n    { [K in keyof HTMLElementEventMap]: Event<HTMLElementEventMap[K]> }\n  >;\n  fn?: Cb;\n}\n\ntype Creator = (\n  content: TemplateStringsArray,\n  ...interpolations: (string | Component | number)[]\n) => Component;\n\ntype TagFabric = (tag: DOMTag) => Creator;\n\ntype TagMap = {\n  [P in DOMTag]: Creator;\n};\n\nconst fabric: TagFabric & Partial<TagMap> = (tag: DOMTag) => (\n  content,\n  ...interpolations\n) => {\n  const id = styledId();\n\n  const styles = join(content, interpolations);\n\n  const Component = (config: Spec | Cb) => {\n    addStyle({ id, styles });\n\n    h(tag, () => {\n      node((reference) => {\n        reference.classList.add(`es-${id}`);\n      });\n      if (config) {\n        if (typeof config === 'function') {\n          config();\n        } else {\n          spec(config);\n          if (typeof config.fn === 'function') {\n            config.fn();\n          }\n        }\n      }\n    });\n  };\n\n  Component.STYLED_ID = id;\n\n  return Component;\n};\n\ndomElements.forEach((element) => {\n  fabric[element] = fabric(element);\n});\n\nexport const styled = fabric as TagFabric & TagMap;\n","export enum CellType {\r\n  EMPTY,\r\n  SNAKE,\r\n  FOOD\r\n}\r\n\r\nexport enum Status {\r\n  START,\r\n  WAIT,\r\n  RUN,\r\n  END\r\n}\r\n\r\nexport enum Direction {\r\n  NONE,\r\n  UP,\r\n  DOWN,\r\n  LEFT,\r\n  RIGHT\r\n}\r\n\r\nexport type SnakePart = [number, number];\r\n","import {using} from 'forest';\r\nimport {styled, StyledRoot} from 'foliage';\r\nimport {CellType} from './types';\r\n\r\n\r\nexport const Root = styled.div`\r\n  position: relative;\r\n  background-color: gray;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n\r\n  & [data-screen='modal'] {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  & [data-font-size='big'] {\r\n    font-size: 30px;\r\n  }\r\n\r\n  & [data-font-size='small'] {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nexport const Board = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: calc((20px + 4px) * 15);\r\n`;\r\n\r\nexport const Cell = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  box-sizing: border-box;\r\n  margin: 2px;\r\n  \r\n  &[data-type='${CellType.EMPTY}'] {\r\n    background-color: lightgray;\r\n  }\r\n\r\n  &[data-type='${CellType.SNAKE}'] {\r\n    background-color: black;\r\n  }\r\n\r\n  &[data-type='${CellType.FOOD}'] {\r\n    background-color: yellow;\r\n  }\r\n`;\r\n\r\nexport const Summary = styled.div`\r\n  width: 150px;\r\n  height: calc((20px + 4px) * 15);\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const GameScreen = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const StartScreen = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n`;\r\n\r\nexport const EndScreen = styled.div`\r\n  background-color: rgba(100, 0, 0, 0.9);\r\n  flex-direction: column;\r\n`;\r\n\r\nusing(document.head, StyledRoot);\r\n","import {SnakePart, CellType, Direction} from './types';\r\n\r\n/** Игровой тик, зависит от текущего счета */\r\nexport function tick(score: number) {\r\n  return new Promise((resolve) => setTimeout(resolve, 1000 / (1 + score)));\r\n}\r\n\r\n/** Заполнение ячеек по их типу */\r\nexport function populateCells([snake, food]: [SnakePart[], SnakePart | null]): CellType[] {\r\n  const result = Array.from({ length: 15 * 15 }, () => CellType.EMPTY);\r\n\r\n  for (let part of snake) {\r\n    result[part[1] * 15 + part[0]] = CellType.SNAKE;\r\n  }\r\n\r\n  if (food) {\r\n    result[food[1] * 15 + food[0]] = CellType.FOOD;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/** Создание еды в свободном месте */\r\nexport function createFood(snake: SnakePart[], food: SnakePart | null): SnakePart {\r\n  if (food) {\r\n    return food;\r\n  }\r\n\r\n  while (true) {\r\n    const x = Math.floor(Math.random() * 15);\r\n    const y = Math.floor(Math.random() * 15);\r\n\r\n    if (!snake.some(part => part[0] === x && part[1] === y)) {\r\n      return [x, y];\r\n    }\r\n  }\r\n}\r\n\r\n/** Движение змеи */\r\nexport function moveSnake([snake, food, direction]: [\r\n  SnakePart[],\r\n  SnakePart | null,\r\n  Direction\r\n]): [SnakePart[], SnakePart | null] {\r\n  const snakeParts = [...snake];\r\n  let [x, y] = snake[snake.length - 1];\r\n\r\n  switch (direction) {\r\n    case Direction.UP:\r\n      y = y - 1 < 0 ? 14 : y - 1;\r\n      break;\r\n    case Direction.DOWN:\r\n      y = y + 1 > 14 ? 0 : y + 1;\r\n      break;\r\n    case Direction.LEFT:\r\n      x = x - 1 < 0 ? 14 : x - 1;\r\n      break;\r\n    case Direction.RIGHT:\r\n      x = x + 1 > 14 ? 0 : x + 1;\r\n      break;\r\n  }\r\n\r\n  snakeParts.push([x, y]);\r\n\r\n  const [foodX, foodY] = food || [];\r\n  let newFood: SnakePart | null = food;\r\n\r\n  if (foodX !== x || foodY !== y) {\r\n    snakeParts.shift();\r\n  } else {\r\n    newFood = null;\r\n  }\r\n\r\n  if (snake.some(part => part[0] === x && part[1] === y)) {\r\n    throw new Error();\r\n  }\r\n\r\n  return [snakeParts, newFood];\r\n}\r\n\r\n/** Мап кода кнопки в доступное направление */\r\nexport function keycodeToDirection(current: Direction, code: number): Direction {\r\n  if (code === 37 && current !== Direction.RIGHT) {\r\n    return Direction.LEFT;\r\n  }\r\n\r\n  if (code === 38 && current !== Direction.DOWN) {\r\n    return Direction.UP;\r\n  }\r\n\r\n  if (code === 39 && current !== Direction.LEFT) {\r\n    return Direction.RIGHT;\r\n  }\r\n\r\n  if (code === 40 && current !== Direction.UP) {\r\n    return Direction.DOWN;\r\n  }\r\n\r\n  return current;\r\n}\r\n","import {createStore, createEvent, createEffect, sample, merge, forward, guard} from 'effector';\r\nimport {Status, SnakePart, CellType, Direction} from './types';\r\nimport {moveSnake, populateCells, createFood, keycodeToDirection, tick} from './utils';\r\n\r\n/** Первичная инициализация логики */\r\nconst init = createEvent();\r\n\r\n/** Нажатие на клавишу управления */\r\nexport const keydown = createEvent<number>();\r\n\r\n/** Игровой тик зависит от текущего счета */\r\nconst fxTick = createEffect({handler: tick});\r\n\r\n/** Движение змеи */\r\nconst fxMove = createEffect({handler: moveSnake});\r\n\r\n/** Текущий статус игры */\r\nexport const $status = createStore<Status>(Status.START)\r\n  .on(keydown, (status) => (status === Status.START || status === Status.END) ? Status.WAIT : Status.RUN)\r\n  .on(fxMove.fail, () => Status.END)\r\n\r\n/** Направление движения змеи */\r\nconst $direction = createStore<Direction>(Direction.NONE)\r\n  .on(keydown, keycodeToDirection)\r\n  .reset(fxMove.fail);\r\n\r\n/** Клетки, занятые змеей */\r\nconst $snake = createStore<SnakePart[]>([[7, 7]])\r\n  .on(fxMove.doneData, (_, [snake]) => snake)\r\n  .reset(fxMove.fail);\r\n\r\n/** Клетка с едой */\r\nconst $food = createStore<SnakePart | null>([7, 5]);\r\n\r\n/** Текущий счет */\r\nexport const $score = createStore(0)\r\n  .on(fxMove.doneData, (score, [_, food]) => food ? score : score + 1)\r\n  .reset($status.updates.filter({fn: status => status === Status.WAIT}))\r\n\r\n/** Игровое поле */\r\nexport const $cells = createStore<CellType[]>([]);\r\n\r\n/** При изменении значений змеи или еды - пересчитать игровое поле */\r\nsample({\r\n  source: [$snake, $food],\r\n  clock: merge([init, $snake.updates, $food.updates]),\r\n  target: $cells,\r\n  fn: populateCells\r\n});\r\n\r\n/** После движения змеи создать новую еду, если она её съела */\r\nsample({\r\n  source: $snake,\r\n  clock: fxMove.doneData.map(([_, food]) => food),\r\n  target: $food,\r\n  fn: createFood,\r\n})\r\n\r\n/** На каждый тик игры взять необходимые значения и начать движения змеи */\r\nsample({\r\n  source: [$snake, $food, $direction],\r\n  clock: fxTick,\r\n  target: fxMove,\r\n});\r\n\r\n/** Запуск тика при смене статус или при окончании предыдущего тика */\r\nsample({\r\n  source: $score,\r\n  clock: guard(\r\n    merge([fxTick.done, $status.updates]),\r\n    {filter: $status.map(status => status === Status.RUN)}\r\n  ),\r\n  target: fxTick,\r\n});\r\n\r\ninit();\r\n","import {using, list, spec, h} from \"forest\";\r\nimport {Root, Board, Cell, Summary, Info, GameScreen, StartScreen, EndScreen} from './parts';\r\nimport {$cells, $score, $status, keydown} from './logic';\r\nimport { Status } from \"./types\";\r\n\r\nfunction App() {\r\n  window.addEventListener(\"keydown\", e => keydown(e.keyCode));\r\n\r\n  Root(() => {\r\n    GameScreen(() => {\r\n      Board(() => {\r\n        list($cells, ({ store }) => Cell({ data: { type: store } }));\r\n      });\r\n  \r\n      Summary(() => {\r\n        Info({text: $score.map(score => `Score: ${score}`)})\r\n      })\r\n    });\r\n\r\n    StartScreen(() => {\r\n      spec({\r\n        data: {screen: 'modal'},\r\n        visible: $status.map(status => status === Status.START),\r\n      });\r\n\r\n      h('div', {\r\n        text: 'Snake game on Effector + Forest + Foliage',\r\n        data: {fontSize: 'big'},\r\n      });\r\n\r\n      h('div', {\r\n        text: 'press any key to continue',\r\n        data: {fontSize: 'small'},\r\n      });\r\n    });\r\n\r\n    EndScreen(() => {\r\n      spec({\r\n        data: {screen: 'modal'},\r\n        visible: $status.map(status => status === Status.END),\r\n      })\r\n\r\n      h('div', {\r\n        data: {fontSize: 'big'},\r\n        text: $score.map(score => `Game over! Your final score: ${score}`),\r\n      })\r\n      h('div', {\r\n        data: {fontSize: 'small'},\r\n        text: 'press any key to continue',\r\n      })\r\n    });\r\n  });\r\n}\r\n\r\nusing(document.body, App);\r\n"]}